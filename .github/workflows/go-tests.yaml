---
name: Tests
on: # yamllint disable-line rule:truthy
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ["dev", "develop", "main", "master"]
  # Run on default branch for cache generation & to report coverage on master branch to Codecov
  push:
    branches: ["dev", "develop", "main", "master"]
  # to have an ability to run thee workflow manually
  workflow_dispatch: # yamllint disable-line rule:empty-values

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

env:
  INDYKITE_APPLICATION_CREDENTIALS: ${{ secrets.APP_AGENT_CREDENTIALS }}
  INDYKITE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CUSTOMER_ID: ${{ secrets.CUSTOMER_ID }}
  LOCATION_ID: ${{ secrets.LOCATION_ID }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SDK_AUDIT_TABLE_NAME: ${{ secrets.SDK_AUDIT_TABLE_NAME }}
  PROJ_NUMBER: 699926043561
  RUN_ENV: staging

#
# https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#permissions
# "all of those that are not specified are set to none."
permissions:
  contents: read # work with the contents of the repository
#
jobs:
  test:
    name: Unit
    runs-on: ubuntu-latest
    steps:
      - name: actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0 - https://github.com/actions/checkout/releases

      - name: setup/golang
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0 - https://github.com/actions/setup-go/releases
        with:
          go-version-file: go.mod

      - name: Run Unit tests
        run: |
          make test

      - name: codecov/upload-coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1 - https://github.com/codecov/codecov-action/releases
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          # Notify us when failed, so devs are not waiting for Codecov report when it will never come.
          # Because Codecov report is required to be able to merge, we have to run again the whole test anyway.
          fail_ci_if_error: true

  integration-test:
    name: Integration
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request && github.event.pull_request.draft == false)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0 - https://github.com/actions/checkout/releases

      - name: setup/golang
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0 - https://github.com/actions/setup-go/releases
        with:
          go-version-file: go.mod

      - name: gcloud/auth
        uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0 - https://github.com/google-github-actions/auth/releases
        with:
          workload_identity_provider: projects/581343830490/locations/global/workloadIdentityPools/github-mgmt/providers/github-mgmt-provider
          service_account: github@${{ secrets.GCP_PROJECT_ID_MGMT }}.iam.gserviceaccount.com

      - name: Run Integration tests
        run: |-
          make integration
