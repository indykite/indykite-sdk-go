---
name: Changelog
concurrency: jarvis-changelog
on:
    push:
        branches:
            - master

env:
    BIGQUERY_TABLE: jarvis-dev-268314.deployment_analytics.deployment_events

jobs:
    release-please:
        name: Prepare Release notes
        runs-on: ubuntu-latest
        outputs:
            released: ${{ steps.release-please.outputs.release_created }}
        steps:
            - id: release-please
              uses: maprokes/release-please-action@main
              with:
                  package-name: jarvis-sdk-go
    analytics:
        if: ${{ needs.release-please.outputs.released }}
        name: Submit analytics data
        needs: [release-please]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@master
              with:
                  token: ${{ secrets.CONSOLE_GITHUB_PAT }}
            - name: Install CU tool
              run: npm install -g clickup-simple-cli
            - name: Get Version
              run: |
                  export VERSION="v$(cat .release-please-manifest.json | jq -r '."."')"
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
            - name: Create CU task
              env:
                  CU_list: '186335199'
                  CU_token: ${{ secrets.CLICKUPPAT }}
                  APP_NAME: Go SDK
                  APP_TAG: jarvis-sdk-go
                  CU_status: DEPLOYED
              run: |
                  CU_tags="$APP_TAG,$VERSION,public" cu-cli create -d "Release of $APP_NAME is available here: https://pkg.go.dev/github.com/indykite/jarvis-sdk-go" "$APP_NAME - release $VERSION"

            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v0
              if: ${{ always() }}
              with:
                  credentials_json: ${{ secrets.GCP_SERVICE_KEY_BQ }}
            - name: Publish Deployment Metadata
              if: ${{ always() }}
              uses: indykite/metadata-publisher@v0
              with:
                  version: ${{ env.VERSION }}
                  status: ${{ job.status }}
                  bigquery_table: ${{ env.BIGQUERY_TABLE }}
