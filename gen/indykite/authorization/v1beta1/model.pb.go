// Copyright (c) 2023 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Authorization Service Description.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: indykite/authorization/v1beta1/model.proto

package authorizationv1beta1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	v1beta1 "github.com/indykite/indykite-sdk-go/gen/indykite/objects/v1beta1"
	v1beta2 "github.com/indykite/indykite-sdk-go/gen/indykite/objects/v1beta2"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subject to check if is authorized.
type Subject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Subject:
	//
	//	*Subject_DigitalTwinId
	//	*Subject_DigitalTwinProperty
	//	*Subject_AccessToken
	//	*Subject_ExternalId
	Subject       isSubject_Subject `protobuf_oneof:"subject"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subject) Reset() {
	*x = Subject{}
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subject) ProtoMessage() {}

func (x *Subject) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subject.ProtoReflect.Descriptor instead.
func (*Subject) Descriptor() ([]byte, []int) {
	return file_indykite_authorization_v1beta1_model_proto_rawDescGZIP(), []int{0}
}

func (x *Subject) GetSubject() isSubject_Subject {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Subject) GetDigitalTwinId() *DigitalTwin {
	if x != nil {
		if x, ok := x.Subject.(*Subject_DigitalTwinId); ok {
			return x.DigitalTwinId
		}
	}
	return nil
}

func (x *Subject) GetDigitalTwinProperty() *Property {
	if x != nil {
		if x, ok := x.Subject.(*Subject_DigitalTwinProperty); ok {
			return x.DigitalTwinProperty
		}
	}
	return nil
}

func (x *Subject) GetAccessToken() string {
	if x != nil {
		if x, ok := x.Subject.(*Subject_AccessToken); ok {
			return x.AccessToken
		}
	}
	return ""
}

func (x *Subject) GetExternalId() *ExternalID {
	if x != nil {
		if x, ok := x.Subject.(*Subject_ExternalId); ok {
			return x.ExternalId
		}
	}
	return nil
}

type isSubject_Subject interface {
	isSubject_Subject()
}

type Subject_DigitalTwinId struct {
	DigitalTwinId *DigitalTwin `protobuf:"bytes,2,opt,name=digital_twin_id,json=digitalTwinId,proto3,oneof"`
}

type Subject_DigitalTwinProperty struct {
	DigitalTwinProperty *Property `protobuf:"bytes,3,opt,name=digital_twin_property,json=digitalTwinProperty,proto3,oneof"`
}

type Subject_AccessToken struct {
	AccessToken string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3,oneof"`
}

type Subject_ExternalId struct {
	ExternalId *ExternalID `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3,oneof"`
}

func (*Subject_DigitalTwinId) isSubject_Subject() {}

func (*Subject_DigitalTwinProperty) isSubject_Subject() {}

func (*Subject_AccessToken) isSubject_Subject() {}

func (*Subject_ExternalId) isSubject_Subject() {}

// DigitalTwin represents a digital entity.
type DigitalTwin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id the unique credential identifier.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalTwin) Reset() {
	*x = DigitalTwin{}
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalTwin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalTwin) ProtoMessage() {}

func (x *DigitalTwin) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalTwin.ProtoReflect.Descriptor instead.
func (*DigitalTwin) Descriptor() ([]byte, []int) {
	return file_indykite_authorization_v1beta1_model_proto_rawDescGZIP(), []int{1}
}

func (x *DigitalTwin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         *v1beta1.Value         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Property) Reset() {
	*x = Property{}
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_indykite_authorization_v1beta1_model_proto_rawDescGZIP(), []int{2}
}

func (x *Property) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Property) GetValue() *v1beta1.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type ExternalID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ExternalId    string                 `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalID) Reset() {
	*x = ExternalID{}
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalID) ProtoMessage() {}

func (x *ExternalID) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalID.ProtoReflect.Descriptor instead.
func (*ExternalID) Descriptor() ([]byte, []int) {
	return file_indykite_authorization_v1beta1_model_proto_rawDescGZIP(), []int{3}
}

func (x *ExternalID) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExternalID) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type InputParam struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*InputParam_StringValue
	//	*InputParam_BoolValue
	//	*InputParam_IntegerValue
	//	*InputParam_DoubleValue
	//	*InputParam_TimeValue
	//	*InputParam_DurationValue
	//	*InputParam_ArrayValue
	//	*InputParam_MapValue
	Value         isInputParam_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputParam) Reset() {
	*x = InputParam{}
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputParam) ProtoMessage() {}

func (x *InputParam) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_authorization_v1beta1_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputParam.ProtoReflect.Descriptor instead.
func (*InputParam) Descriptor() ([]byte, []int) {
	return file_indykite_authorization_v1beta1_model_proto_rawDescGZIP(), []int{4}
}

func (x *InputParam) GetValue() isInputParam_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *InputParam) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*InputParam_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *InputParam) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*InputParam_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *InputParam) GetIntegerValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*InputParam_IntegerValue); ok {
			return x.IntegerValue
		}
	}
	return 0
}

func (x *InputParam) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*InputParam_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *InputParam) GetTimeValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*InputParam_TimeValue); ok {
			return x.TimeValue
		}
	}
	return nil
}

func (x *InputParam) GetDurationValue() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Value.(*InputParam_DurationValue); ok {
			return x.DurationValue
		}
	}
	return nil
}

func (x *InputParam) GetArrayValue() *v1beta2.Array {
	if x != nil {
		if x, ok := x.Value.(*InputParam_ArrayValue); ok {
			return x.ArrayValue
		}
	}
	return nil
}

func (x *InputParam) GetMapValue() *v1beta2.Map {
	if x != nil {
		if x, ok := x.Value.(*InputParam_MapValue); ok {
			return x.MapValue
		}
	}
	return nil
}

type isInputParam_Value interface {
	isInputParam_Value()
}

type InputParam_StringValue struct {
	// A string value.
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type InputParam_BoolValue struct {
	// A boolean value.
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type InputParam_IntegerValue struct {
	// An integer value.
	IntegerValue int64 `protobuf:"varint,3,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type InputParam_DoubleValue struct {
	// A double value.
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type InputParam_TimeValue struct {
	// A timestamp value.
	TimeValue *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time_value,json=timeValue,proto3,oneof"`
}

type InputParam_DurationValue struct {
	// A duration value.
	DurationValue *durationpb.Duration `protobuf:"bytes,6,opt,name=duration_value,json=durationValue,proto3,oneof"`
}

type InputParam_ArrayValue struct {
	// An array value.
	ArrayValue *v1beta2.Array `protobuf:"bytes,7,opt,name=array_value,json=arrayValue,proto3,oneof"`
}

type InputParam_MapValue struct {
	// A map value.
	MapValue *v1beta2.Map `protobuf:"bytes,8,opt,name=map_value,json=mapValue,proto3,oneof"`
}

func (*InputParam_StringValue) isInputParam_Value() {}

func (*InputParam_BoolValue) isInputParam_Value() {}

func (*InputParam_IntegerValue) isInputParam_Value() {}

func (*InputParam_DoubleValue) isInputParam_Value() {}

func (*InputParam_TimeValue) isInputParam_Value() {}

func (*InputParam_DurationValue) isInputParam_Value() {}

func (*InputParam_ArrayValue) isInputParam_Value() {}

func (*InputParam_MapValue) isInputParam_Value() {}

var File_indykite_authorization_v1beta1_model_proto protoreflect.FileDescriptor

var file_indykite_authorization_v1beta1_model_proto_rawDesc = string([]byte{
	0x0a, 0x2a, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x69, 0x6e,
	0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x69,
	0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x02, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x5f, 0x0a, 0x0f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x77, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b,
	0x69, 0x74, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x54, 0x77, 0x69, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x48,
	0x00, 0x52, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x68, 0x0a, 0x15, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x77, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x13, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x54, 0x77,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x14, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x57, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x42, 0x0e, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x03, 0xf8, 0x42,
	0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x45, 0x0a, 0x0b, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x54, 0x77, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x72, 0x21, 0x10, 0x1b, 0x18, 0x64, 0x32, 0x1b, 0x5e,
	0x67, 0x69, 0x64, 0x3a, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5f,
	0x5d, 0x7b, 0x32, 0x37, 0x2c, 0x31, 0x30, 0x30, 0x7d, 0x24, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x02, 0x18, 0x14, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b,
	0x69, 0x74, 0x65, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x18, 0x40, 0x32,
	0x0b, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x2a, 0x24, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0xba, 0x03, 0x0a,
	0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48,
	0x00, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x32, 0x2e, 0x4d, 0x61, 0x70, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0xa7, 0x02, 0x0a, 0x22, 0x63, 0x6f,
	0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x42, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x64, 0x79, 0x6b,
	0x69, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2d, 0x73, 0x64, 0x6b,
	0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x41,
	0x58, 0xaa, 0x02, 0x1e, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0xca, 0x02, 0x1e, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x5c, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0xe2, 0x02, 0x2a, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x5c, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x20, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x3a, 0x3a, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_indykite_authorization_v1beta1_model_proto_rawDescOnce sync.Once
	file_indykite_authorization_v1beta1_model_proto_rawDescData []byte
)

func file_indykite_authorization_v1beta1_model_proto_rawDescGZIP() []byte {
	file_indykite_authorization_v1beta1_model_proto_rawDescOnce.Do(func() {
		file_indykite_authorization_v1beta1_model_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indykite_authorization_v1beta1_model_proto_rawDesc), len(file_indykite_authorization_v1beta1_model_proto_rawDesc)))
	})
	return file_indykite_authorization_v1beta1_model_proto_rawDescData
}

var file_indykite_authorization_v1beta1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_indykite_authorization_v1beta1_model_proto_goTypes = []any{
	(*Subject)(nil),               // 0: indykite.authorization.v1beta1.Subject
	(*DigitalTwin)(nil),           // 1: indykite.authorization.v1beta1.DigitalTwin
	(*Property)(nil),              // 2: indykite.authorization.v1beta1.Property
	(*ExternalID)(nil),            // 3: indykite.authorization.v1beta1.ExternalID
	(*InputParam)(nil),            // 4: indykite.authorization.v1beta1.InputParam
	(*v1beta1.Value)(nil),         // 5: indykite.objects.v1beta1.Value
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 7: google.protobuf.Duration
	(*v1beta2.Array)(nil),         // 8: indykite.objects.v1beta2.Array
	(*v1beta2.Map)(nil),           // 9: indykite.objects.v1beta2.Map
}
var file_indykite_authorization_v1beta1_model_proto_depIdxs = []int32{
	1, // 0: indykite.authorization.v1beta1.Subject.digital_twin_id:type_name -> indykite.authorization.v1beta1.DigitalTwin
	2, // 1: indykite.authorization.v1beta1.Subject.digital_twin_property:type_name -> indykite.authorization.v1beta1.Property
	3, // 2: indykite.authorization.v1beta1.Subject.external_id:type_name -> indykite.authorization.v1beta1.ExternalID
	5, // 3: indykite.authorization.v1beta1.Property.value:type_name -> indykite.objects.v1beta1.Value
	6, // 4: indykite.authorization.v1beta1.InputParam.time_value:type_name -> google.protobuf.Timestamp
	7, // 5: indykite.authorization.v1beta1.InputParam.duration_value:type_name -> google.protobuf.Duration
	8, // 6: indykite.authorization.v1beta1.InputParam.array_value:type_name -> indykite.objects.v1beta2.Array
	9, // 7: indykite.authorization.v1beta1.InputParam.map_value:type_name -> indykite.objects.v1beta2.Map
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_indykite_authorization_v1beta1_model_proto_init() }
func file_indykite_authorization_v1beta1_model_proto_init() {
	if File_indykite_authorization_v1beta1_model_proto != nil {
		return
	}
	file_indykite_authorization_v1beta1_model_proto_msgTypes[0].OneofWrappers = []any{
		(*Subject_DigitalTwinId)(nil),
		(*Subject_DigitalTwinProperty)(nil),
		(*Subject_AccessToken)(nil),
		(*Subject_ExternalId)(nil),
	}
	file_indykite_authorization_v1beta1_model_proto_msgTypes[4].OneofWrappers = []any{
		(*InputParam_StringValue)(nil),
		(*InputParam_BoolValue)(nil),
		(*InputParam_IntegerValue)(nil),
		(*InputParam_DoubleValue)(nil),
		(*InputParam_TimeValue)(nil),
		(*InputParam_DurationValue)(nil),
		(*InputParam_ArrayValue)(nil),
		(*InputParam_MapValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indykite_authorization_v1beta1_model_proto_rawDesc), len(file_indykite_authorization_v1beta1_model_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indykite_authorization_v1beta1_model_proto_goTypes,
		DependencyIndexes: file_indykite_authorization_v1beta1_model_proto_depIdxs,
		MessageInfos:      file_indykite_authorization_v1beta1_model_proto_msgTypes,
	}.Build()
	File_indykite_authorization_v1beta1_model_proto = out.File
	file_indykite_authorization_v1beta1_model_proto_goTypes = nil
	file_indykite_authorization_v1beta1_model_proto_depIdxs = nil
}
