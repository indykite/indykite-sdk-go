// Copyright (c) 2023 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: indykite/auditsink/v1beta1/ingest.proto

package auditsinkv1beta1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	v1beta2 "github.com/indykite/indykite-sdk-go/gen/indykite/objects/v1beta2"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchUpsertNodes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpsertNodes) Reset() {
	*x = BatchUpsertNodes{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpsertNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertNodes) ProtoMessage() {}

func (x *BatchUpsertNodes) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertNodes.ProtoReflect.Descriptor instead.
func (*BatchUpsertNodes) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{0}
}

func (x *BatchUpsertNodes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type BatchUpsertRelationships struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relationships []*Relationship        `protobuf:"bytes,1,rep,name=relationships,proto3" json:"relationships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpsertRelationships) Reset() {
	*x = BatchUpsertRelationships{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpsertRelationships) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpsertRelationships) ProtoMessage() {}

func (x *BatchUpsertRelationships) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpsertRelationships.ProtoReflect.Descriptor instead.
func (*BatchUpsertRelationships) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{1}
}

func (x *BatchUpsertRelationships) GetRelationships() []*Relationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

type BatchDeleteNodes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeMatch           `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteNodes) Reset() {
	*x = BatchDeleteNodes{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNodes) ProtoMessage() {}

func (x *BatchDeleteNodes) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNodes.ProtoReflect.Descriptor instead.
func (*BatchDeleteNodes) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{2}
}

func (x *BatchDeleteNodes) GetNodes() []*NodeMatch {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type BatchDeleteRelationships struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relationships []*Relationship        `protobuf:"bytes,1,rep,name=relationships,proto3" json:"relationships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteRelationships) Reset() {
	*x = BatchDeleteRelationships{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteRelationships) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteRelationships) ProtoMessage() {}

func (x *BatchDeleteRelationships) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteRelationships.ProtoReflect.Descriptor instead.
func (*BatchDeleteRelationships) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{3}
}

func (x *BatchDeleteRelationships) GetRelationships() []*Relationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

type BatchDeleteNodeProperties struct {
	state          protoimpl.MessageState          `protogen:"open.v1"`
	NodeProperties []*DeleteData_NodePropertyMatch `protobuf:"bytes,1,rep,name=node_properties,json=nodeProperties,proto3" json:"node_properties,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchDeleteNodeProperties) Reset() {
	*x = BatchDeleteNodeProperties{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteNodeProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNodeProperties) ProtoMessage() {}

func (x *BatchDeleteNodeProperties) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNodeProperties.ProtoReflect.Descriptor instead.
func (*BatchDeleteNodeProperties) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{4}
}

func (x *BatchDeleteNodeProperties) GetNodeProperties() []*DeleteData_NodePropertyMatch {
	if x != nil {
		return x.NodeProperties
	}
	return nil
}

type BatchDeleteRelationshipProperties struct {
	state                  protoimpl.MessageState                  `protogen:"open.v1"`
	RelationshipProperties []*DeleteData_RelationshipPropertyMatch `protobuf:"bytes,1,rep,name=relationship_properties,json=relationshipProperties,proto3" json:"relationship_properties,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BatchDeleteRelationshipProperties) Reset() {
	*x = BatchDeleteRelationshipProperties{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteRelationshipProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteRelationshipProperties) ProtoMessage() {}

func (x *BatchDeleteRelationshipProperties) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteRelationshipProperties.ProtoReflect.Descriptor instead.
func (*BatchDeleteRelationshipProperties) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{5}
}

func (x *BatchDeleteRelationshipProperties) GetRelationshipProperties() []*DeleteData_RelationshipPropertyMatch {
	if x != nil {
		return x.RelationshipProperties
	}
	return nil
}

type BatchDeleteNodeTags struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	NodeTags      []*DeleteData_NodeTagMatch `protobuf:"bytes,1,rep,name=node_tags,json=nodeTags,proto3" json:"node_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteNodeTags) Reset() {
	*x = BatchDeleteNodeTags{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteNodeTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNodeTags) ProtoMessage() {}

func (x *BatchDeleteNodeTags) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNodeTags.ProtoReflect.Descriptor instead.
func (*BatchDeleteNodeTags) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{6}
}

func (x *BatchDeleteNodeTags) GetNodeTags() []*DeleteData_NodeTagMatch {
	if x != nil {
		return x.NodeTags
	}
	return nil
}

type UpsertData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UpsertData_Node
	//	*UpsertData_Relationship
	Data          isUpsertData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertData) Reset() {
	*x = UpsertData{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertData) ProtoMessage() {}

func (x *UpsertData) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertData.ProtoReflect.Descriptor instead.
func (*UpsertData) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{7}
}

func (x *UpsertData) GetData() isUpsertData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpsertData) GetNode() *Node {
	if x != nil {
		if x, ok := x.Data.(*UpsertData_Node); ok {
			return x.Node
		}
	}
	return nil
}

func (x *UpsertData) GetRelationship() *Relationship {
	if x != nil {
		if x, ok := x.Data.(*UpsertData_Relationship); ok {
			return x.Relationship
		}
	}
	return nil
}

type isUpsertData_Data interface {
	isUpsertData_Data()
}

type UpsertData_Node struct {
	Node *Node `protobuf:"bytes,1,opt,name=node,proto3,oneof"`
}

type UpsertData_Relationship struct {
	Relationship *Relationship `protobuf:"bytes,2,opt,name=relationship,proto3,oneof"`
}

func (*UpsertData_Node) isUpsertData_Data() {}

func (*UpsertData_Relationship) isUpsertData_Data() {}

type DeleteData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*DeleteData_Node
	//	*DeleteData_Relationship
	//	*DeleteData_NodeProperty
	//	*DeleteData_RelationshipProperty
	//	*DeleteData_NodeTags
	//	*DeleteData_NodePropertyMetadata
	Data          isDeleteData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteData) Reset() {
	*x = DeleteData{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteData) ProtoMessage() {}

func (x *DeleteData) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteData.ProtoReflect.Descriptor instead.
func (*DeleteData) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteData) GetData() isDeleteData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteData) GetNode() *NodeMatch {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_Node); ok {
			return x.Node
		}
	}
	return nil
}

func (x *DeleteData) GetRelationship() *Relationship {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_Relationship); ok {
			return x.Relationship
		}
	}
	return nil
}

func (x *DeleteData) GetNodeProperty() *DeleteData_NodePropertyMatch {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_NodeProperty); ok {
			return x.NodeProperty
		}
	}
	return nil
}

func (x *DeleteData) GetRelationshipProperty() *DeleteData_RelationshipPropertyMatch {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_RelationshipProperty); ok {
			return x.RelationshipProperty
		}
	}
	return nil
}

func (x *DeleteData) GetNodeTags() *DeleteData_NodeTagMatch {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_NodeTags); ok {
			return x.NodeTags
		}
	}
	return nil
}

func (x *DeleteData) GetNodePropertyMetadata() *DeleteData_NodePropertyMetadataMatch {
	if x != nil {
		if x, ok := x.Data.(*DeleteData_NodePropertyMetadata); ok {
			return x.NodePropertyMetadata
		}
	}
	return nil
}

type isDeleteData_Data interface {
	isDeleteData_Data()
}

type DeleteData_Node struct {
	Node *NodeMatch `protobuf:"bytes,1,opt,name=node,proto3,oneof"`
}

type DeleteData_Relationship struct {
	Relationship *Relationship `protobuf:"bytes,2,opt,name=relationship,proto3,oneof"`
}

type DeleteData_NodeProperty struct {
	NodeProperty *DeleteData_NodePropertyMatch `protobuf:"bytes,3,opt,name=node_property,json=nodeProperty,proto3,oneof"`
}

type DeleteData_RelationshipProperty struct {
	RelationshipProperty *DeleteData_RelationshipPropertyMatch `protobuf:"bytes,4,opt,name=relationship_property,json=relationshipProperty,proto3,oneof"`
}

type DeleteData_NodeTags struct {
	NodeTags *DeleteData_NodeTagMatch `protobuf:"bytes,5,opt,name=node_tags,json=nodeTags,proto3,oneof"`
}

type DeleteData_NodePropertyMetadata struct {
	NodePropertyMetadata *DeleteData_NodePropertyMetadataMatch `protobuf:"bytes,6,opt,name=node_property_metadata,json=nodePropertyMetadata,proto3,oneof"`
}

func (*DeleteData_Node) isDeleteData_Data() {}

func (*DeleteData_Relationship) isDeleteData_Data() {}

func (*DeleteData_NodeProperty) isDeleteData_Data() {}

func (*DeleteData_RelationshipProperty) isDeleteData_Data() {}

func (*DeleteData_NodeTags) isDeleteData_Data() {}

func (*DeleteData_NodePropertyMetadata) isDeleteData_Data() {}

type DigitalTwin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalTwin) Reset() {
	*x = DigitalTwin{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalTwin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalTwin) ProtoMessage() {}

func (x *DigitalTwin) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalTwin.ProtoReflect.Descriptor instead.
func (*DigitalTwin) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{9}
}

func (x *DigitalTwin) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DigitalTwin) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DigitalTwin) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{10}
}

func (x *Resource) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Resource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId    string                 `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	IsIdentity    bool                   `protobuf:"varint,4,opt,name=is_identity,json=isIdentity,proto3" json:"is_identity,omitempty"`
	Properties    []*Property            `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{11}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Node) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Node) GetIsIdentity() bool {
	if x != nil {
		return x.IsIdentity
	}
	return false
}

func (x *Node) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type Relationship struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source        *NodeMatch             `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target        *NodeMatch             `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Properties    []*Property            `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Relationship) Reset() {
	*x = Relationship{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Relationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relationship) ProtoMessage() {}

func (x *Relationship) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relationship.ProtoReflect.Descriptor instead.
func (*Relationship) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{12}
}

func (x *Relationship) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Relationship) GetSource() *NodeMatch {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Relationship) GetTarget() *NodeMatch {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Relationship) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type NodeMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMatch) Reset() {
	*x = NodeMatch{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMatch) ProtoMessage() {}

func (x *NodeMatch) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMatch.ProtoReflect.Descriptor instead.
func (*NodeMatch) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{13}
}

func (x *NodeMatch) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *NodeMatch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         *v1beta2.Value         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ExternalValue string                 `protobuf:"bytes,3,opt,name=external_value,json=externalValue,proto3" json:"external_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Property) Reset() {
	*x = Property{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{14}
}

func (x *Property) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Property) GetValue() *v1beta2.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Property) GetExternalValue() string {
	if x != nil {
		return x.ExternalValue
	}
	return ""
}

type DeleteData_NodeTagMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *NodeMatch             `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteData_NodeTagMatch) Reset() {
	*x = DeleteData_NodeTagMatch{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteData_NodeTagMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteData_NodeTagMatch) ProtoMessage() {}

func (x *DeleteData_NodeTagMatch) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteData_NodeTagMatch.ProtoReflect.Descriptor instead.
func (*DeleteData_NodeTagMatch) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{8, 0}
}

func (x *DeleteData_NodeTagMatch) GetMatch() *NodeMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *DeleteData_NodeTagMatch) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteData_NodePropertyMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *NodeMatch             `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	PropertyType  string                 `protobuf:"bytes,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteData_NodePropertyMatch) Reset() {
	*x = DeleteData_NodePropertyMatch{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteData_NodePropertyMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteData_NodePropertyMatch) ProtoMessage() {}

func (x *DeleteData_NodePropertyMatch) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteData_NodePropertyMatch.ProtoReflect.Descriptor instead.
func (*DeleteData_NodePropertyMatch) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{8, 1}
}

func (x *DeleteData_NodePropertyMatch) GetMatch() *NodeMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *DeleteData_NodePropertyMatch) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

type DeleteData_NodePropertyMetadataMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *NodeMatch             `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	PropertyType  string                 `protobuf:"bytes,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	MetadataType  string                 `protobuf:"bytes,3,opt,name=metadata_type,json=metadataType,proto3" json:"metadata_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteData_NodePropertyMetadataMatch) Reset() {
	*x = DeleteData_NodePropertyMetadataMatch{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteData_NodePropertyMetadataMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteData_NodePropertyMetadataMatch) ProtoMessage() {}

func (x *DeleteData_NodePropertyMetadataMatch) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteData_NodePropertyMetadataMatch.ProtoReflect.Descriptor instead.
func (*DeleteData_NodePropertyMetadataMatch) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{8, 2}
}

func (x *DeleteData_NodePropertyMetadataMatch) GetMatch() *NodeMatch {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *DeleteData_NodePropertyMetadataMatch) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *DeleteData_NodePropertyMetadataMatch) GetMetadataType() string {
	if x != nil {
		return x.MetadataType
	}
	return ""
}

type DeleteData_RelationshipPropertyMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source        *NodeMatch             `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target        *NodeMatch             `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	PropertyType  string                 `protobuf:"bytes,4,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteData_RelationshipPropertyMatch) Reset() {
	*x = DeleteData_RelationshipPropertyMatch{}
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteData_RelationshipPropertyMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteData_RelationshipPropertyMatch) ProtoMessage() {}

func (x *DeleteData_RelationshipPropertyMatch) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteData_RelationshipPropertyMatch.ProtoReflect.Descriptor instead.
func (*DeleteData_RelationshipPropertyMatch) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP(), []int{8, 3}
}

func (x *DeleteData_RelationshipPropertyMatch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeleteData_RelationshipPropertyMatch) GetSource() *NodeMatch {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *DeleteData_RelationshipPropertyMatch) GetTarget() *NodeMatch {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *DeleteData_RelationshipPropertyMatch) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

var File_indykite_auditsink_v1beta1_ingest_proto protoreflect.FileDescriptor

const file_indykite_auditsink_v1beta1_ingest_proto_rawDesc = "" +
	"\n" +
	"'indykite/auditsink/v1beta1/ingest.proto\x12\x1aindykite.auditsink.v1beta1\x1a$indykite/objects/v1beta2/value.proto\"J\n" +
	"\x10BatchUpsertNodes\x126\n" +
	"\x05nodes\x18\x01 \x03(\v2 .indykite.auditsink.v1beta1.NodeR\x05nodes\"j\n" +
	"\x18BatchUpsertRelationships\x12N\n" +
	"\rrelationships\x18\x01 \x03(\v2(.indykite.auditsink.v1beta1.RelationshipR\rrelationships\"O\n" +
	"\x10BatchDeleteNodes\x12;\n" +
	"\x05nodes\x18\x01 \x03(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x05nodes\"j\n" +
	"\x18BatchDeleteRelationships\x12N\n" +
	"\rrelationships\x18\x01 \x03(\v2(.indykite.auditsink.v1beta1.RelationshipR\rrelationships\"~\n" +
	"\x19BatchDeleteNodeProperties\x12a\n" +
	"\x0fnode_properties\x18\x01 \x03(\v28.indykite.auditsink.v1beta1.DeleteData.NodePropertyMatchR\x0enodeProperties\"\x9e\x01\n" +
	"!BatchDeleteRelationshipProperties\x12y\n" +
	"\x17relationship_properties\x18\x01 \x03(\v2@.indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatchR\x16relationshipProperties\"g\n" +
	"\x13BatchDeleteNodeTags\x12P\n" +
	"\tnode_tags\x18\x01 \x03(\v23.indykite.auditsink.v1beta1.DeleteData.NodeTagMatchR\bnodeTags\"\x9c\x01\n" +
	"\n" +
	"UpsertData\x126\n" +
	"\x04node\x18\x01 \x01(\v2 .indykite.auditsink.v1beta1.NodeH\x00R\x04node\x12N\n" +
	"\frelationship\x18\x02 \x01(\v2(.indykite.auditsink.v1beta1.RelationshipH\x00R\frelationshipB\x06\n" +
	"\x04data\"\x9b\t\n" +
	"\n" +
	"DeleteData\x12;\n" +
	"\x04node\x18\x01 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchH\x00R\x04node\x12N\n" +
	"\frelationship\x18\x02 \x01(\v2(.indykite.auditsink.v1beta1.RelationshipH\x00R\frelationship\x12_\n" +
	"\rnode_property\x18\x03 \x01(\v28.indykite.auditsink.v1beta1.DeleteData.NodePropertyMatchH\x00R\fnodeProperty\x12w\n" +
	"\x15relationship_property\x18\x04 \x01(\v2@.indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatchH\x00R\x14relationshipProperty\x12R\n" +
	"\tnode_tags\x18\x05 \x01(\v23.indykite.auditsink.v1beta1.DeleteData.NodeTagMatchH\x00R\bnodeTags\x12x\n" +
	"\x16node_property_metadata\x18\x06 \x01(\v2@.indykite.auditsink.v1beta1.DeleteData.NodePropertyMetadataMatchH\x00R\x14nodePropertyMetadata\x1a_\n" +
	"\fNodeTagMatch\x12;\n" +
	"\x05match\x18\x01 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x05match\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\x1au\n" +
	"\x11NodePropertyMatch\x12;\n" +
	"\x05match\x18\x01 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x05match\x12#\n" +
	"\rproperty_type\x18\x02 \x01(\tR\fpropertyType\x1a\xa2\x01\n" +
	"\x19NodePropertyMetadataMatch\x12;\n" +
	"\x05match\x18\x01 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x05match\x12#\n" +
	"\rproperty_type\x18\x02 \x01(\tR\fpropertyType\x12#\n" +
	"\rmetadata_type\x18\x03 \x01(\tR\fmetadataType\x1a\xd2\x01\n" +
	"\x19RelationshipPropertyMatch\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12=\n" +
	"\x06source\x18\x02 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x06source\x12=\n" +
	"\x06target\x18\x03 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x06target\x12#\n" +
	"\rproperty_type\x18\x04 \x01(\tR\fpropertyTypeB\x06\n" +
	"\x04data\"_\n" +
	"\vDigitalTwin\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\"?\n" +
	"\bResource\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"\xb2\x01\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vexternal_id\x18\x02 \x01(\tR\n" +
	"externalId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1f\n" +
	"\vis_identity\x18\x04 \x01(\bR\n" +
	"isIdentity\x12D\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2$.indykite.auditsink.v1beta1.PropertyR\n" +
	"properties\"\xe6\x01\n" +
	"\fRelationship\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12=\n" +
	"\x06source\x18\x02 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x06source\x12=\n" +
	"\x06target\x18\x03 \x01(\v2%.indykite.auditsink.v1beta1.NodeMatchR\x06target\x12D\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2$.indykite.auditsink.v1beta1.PropertyR\n" +
	"properties\"@\n" +
	"\tNodeMatch\x12\x1f\n" +
	"\vexternal_id\x18\x01 \x01(\tR\n" +
	"externalId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"|\n" +
	"\bProperty\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.indykite.objects.v1beta2.ValueR\x05value\x12%\n" +
	"\x0eexternal_value\x18\x03 \x01(\tR\rexternalValueB\x8c\x02\n" +
	"\x1ecom.indykite.auditsink.v1beta1B\vIngestProtoP\x01ZSgithub.com/indykite/indykite-sdk-go/gen/indykite/auditsink/v1beta1;auditsinkv1beta1\xa2\x02\x03IAX\xaa\x02\x1aIndykite.Auditsink.V1beta1\xca\x02\x1aIndykite\\Auditsink\\V1beta1\xe2\x02&Indykite\\Auditsink\\V1beta1\\GPBMetadata\xea\x02\x1cIndykite::Auditsink::V1beta1b\x06proto3"

var (
	file_indykite_auditsink_v1beta1_ingest_proto_rawDescOnce sync.Once
	file_indykite_auditsink_v1beta1_ingest_proto_rawDescData []byte
)

func file_indykite_auditsink_v1beta1_ingest_proto_rawDescGZIP() []byte {
	file_indykite_auditsink_v1beta1_ingest_proto_rawDescOnce.Do(func() {
		file_indykite_auditsink_v1beta1_ingest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indykite_auditsink_v1beta1_ingest_proto_rawDesc), len(file_indykite_auditsink_v1beta1_ingest_proto_rawDesc)))
	})
	return file_indykite_auditsink_v1beta1_ingest_proto_rawDescData
}

var file_indykite_auditsink_v1beta1_ingest_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_indykite_auditsink_v1beta1_ingest_proto_goTypes = []any{
	(*BatchUpsertNodes)(nil),                     // 0: indykite.auditsink.v1beta1.BatchUpsertNodes
	(*BatchUpsertRelationships)(nil),             // 1: indykite.auditsink.v1beta1.BatchUpsertRelationships
	(*BatchDeleteNodes)(nil),                     // 2: indykite.auditsink.v1beta1.BatchDeleteNodes
	(*BatchDeleteRelationships)(nil),             // 3: indykite.auditsink.v1beta1.BatchDeleteRelationships
	(*BatchDeleteNodeProperties)(nil),            // 4: indykite.auditsink.v1beta1.BatchDeleteNodeProperties
	(*BatchDeleteRelationshipProperties)(nil),    // 5: indykite.auditsink.v1beta1.BatchDeleteRelationshipProperties
	(*BatchDeleteNodeTags)(nil),                  // 6: indykite.auditsink.v1beta1.BatchDeleteNodeTags
	(*UpsertData)(nil),                           // 7: indykite.auditsink.v1beta1.UpsertData
	(*DeleteData)(nil),                           // 8: indykite.auditsink.v1beta1.DeleteData
	(*DigitalTwin)(nil),                          // 9: indykite.auditsink.v1beta1.DigitalTwin
	(*Resource)(nil),                             // 10: indykite.auditsink.v1beta1.Resource
	(*Node)(nil),                                 // 11: indykite.auditsink.v1beta1.Node
	(*Relationship)(nil),                         // 12: indykite.auditsink.v1beta1.Relationship
	(*NodeMatch)(nil),                            // 13: indykite.auditsink.v1beta1.NodeMatch
	(*Property)(nil),                             // 14: indykite.auditsink.v1beta1.Property
	(*DeleteData_NodeTagMatch)(nil),              // 15: indykite.auditsink.v1beta1.DeleteData.NodeTagMatch
	(*DeleteData_NodePropertyMatch)(nil),         // 16: indykite.auditsink.v1beta1.DeleteData.NodePropertyMatch
	(*DeleteData_NodePropertyMetadataMatch)(nil), // 17: indykite.auditsink.v1beta1.DeleteData.NodePropertyMetadataMatch
	(*DeleteData_RelationshipPropertyMatch)(nil), // 18: indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatch
	(*v1beta2.Value)(nil),                        // 19: indykite.objects.v1beta2.Value
}
var file_indykite_auditsink_v1beta1_ingest_proto_depIdxs = []int32{
	11, // 0: indykite.auditsink.v1beta1.BatchUpsertNodes.nodes:type_name -> indykite.auditsink.v1beta1.Node
	12, // 1: indykite.auditsink.v1beta1.BatchUpsertRelationships.relationships:type_name -> indykite.auditsink.v1beta1.Relationship
	13, // 2: indykite.auditsink.v1beta1.BatchDeleteNodes.nodes:type_name -> indykite.auditsink.v1beta1.NodeMatch
	12, // 3: indykite.auditsink.v1beta1.BatchDeleteRelationships.relationships:type_name -> indykite.auditsink.v1beta1.Relationship
	16, // 4: indykite.auditsink.v1beta1.BatchDeleteNodeProperties.node_properties:type_name -> indykite.auditsink.v1beta1.DeleteData.NodePropertyMatch
	18, // 5: indykite.auditsink.v1beta1.BatchDeleteRelationshipProperties.relationship_properties:type_name -> indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatch
	15, // 6: indykite.auditsink.v1beta1.BatchDeleteNodeTags.node_tags:type_name -> indykite.auditsink.v1beta1.DeleteData.NodeTagMatch
	11, // 7: indykite.auditsink.v1beta1.UpsertData.node:type_name -> indykite.auditsink.v1beta1.Node
	12, // 8: indykite.auditsink.v1beta1.UpsertData.relationship:type_name -> indykite.auditsink.v1beta1.Relationship
	13, // 9: indykite.auditsink.v1beta1.DeleteData.node:type_name -> indykite.auditsink.v1beta1.NodeMatch
	12, // 10: indykite.auditsink.v1beta1.DeleteData.relationship:type_name -> indykite.auditsink.v1beta1.Relationship
	16, // 11: indykite.auditsink.v1beta1.DeleteData.node_property:type_name -> indykite.auditsink.v1beta1.DeleteData.NodePropertyMatch
	18, // 12: indykite.auditsink.v1beta1.DeleteData.relationship_property:type_name -> indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatch
	15, // 13: indykite.auditsink.v1beta1.DeleteData.node_tags:type_name -> indykite.auditsink.v1beta1.DeleteData.NodeTagMatch
	17, // 14: indykite.auditsink.v1beta1.DeleteData.node_property_metadata:type_name -> indykite.auditsink.v1beta1.DeleteData.NodePropertyMetadataMatch
	14, // 15: indykite.auditsink.v1beta1.Node.properties:type_name -> indykite.auditsink.v1beta1.Property
	13, // 16: indykite.auditsink.v1beta1.Relationship.source:type_name -> indykite.auditsink.v1beta1.NodeMatch
	13, // 17: indykite.auditsink.v1beta1.Relationship.target:type_name -> indykite.auditsink.v1beta1.NodeMatch
	14, // 18: indykite.auditsink.v1beta1.Relationship.properties:type_name -> indykite.auditsink.v1beta1.Property
	19, // 19: indykite.auditsink.v1beta1.Property.value:type_name -> indykite.objects.v1beta2.Value
	13, // 20: indykite.auditsink.v1beta1.DeleteData.NodeTagMatch.match:type_name -> indykite.auditsink.v1beta1.NodeMatch
	13, // 21: indykite.auditsink.v1beta1.DeleteData.NodePropertyMatch.match:type_name -> indykite.auditsink.v1beta1.NodeMatch
	13, // 22: indykite.auditsink.v1beta1.DeleteData.NodePropertyMetadataMatch.match:type_name -> indykite.auditsink.v1beta1.NodeMatch
	13, // 23: indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatch.source:type_name -> indykite.auditsink.v1beta1.NodeMatch
	13, // 24: indykite.auditsink.v1beta1.DeleteData.RelationshipPropertyMatch.target:type_name -> indykite.auditsink.v1beta1.NodeMatch
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_indykite_auditsink_v1beta1_ingest_proto_init() }
func file_indykite_auditsink_v1beta1_ingest_proto_init() {
	if File_indykite_auditsink_v1beta1_ingest_proto != nil {
		return
	}
	file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[7].OneofWrappers = []any{
		(*UpsertData_Node)(nil),
		(*UpsertData_Relationship)(nil),
	}
	file_indykite_auditsink_v1beta1_ingest_proto_msgTypes[8].OneofWrappers = []any{
		(*DeleteData_Node)(nil),
		(*DeleteData_Relationship)(nil),
		(*DeleteData_NodeProperty)(nil),
		(*DeleteData_RelationshipProperty)(nil),
		(*DeleteData_NodeTags)(nil),
		(*DeleteData_NodePropertyMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indykite_auditsink_v1beta1_ingest_proto_rawDesc), len(file_indykite_auditsink_v1beta1_ingest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indykite_auditsink_v1beta1_ingest_proto_goTypes,
		DependencyIndexes: file_indykite_auditsink_v1beta1_ingest_proto_depIdxs,
		MessageInfos:      file_indykite_auditsink_v1beta1_ingest_proto_msgTypes,
	}.Build()
	File_indykite_auditsink_v1beta1_ingest_proto = out.File
	file_indykite_auditsink_v1beta1_ingest_proto_goTypes = nil
	file_indykite_auditsink_v1beta1_ingest_proto_depIdxs = nil
}
