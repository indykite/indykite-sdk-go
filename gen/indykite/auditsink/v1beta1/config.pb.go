// Copyright (c) 2023 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: indykite/auditsink/v1beta1/config.proto

package auditsinkv1beta1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConfigType is equivalent to internal DocumentType, for easier maintenance keep same numbers.
type ConfigType int32

const (
	ConfigType_CONFIG_TYPE_INVALID              ConfigType = 0
	ConfigType_CONFIG_TYPE_CUSTOMER             ConfigType = 1
	ConfigType_CONFIG_TYPE_APPLICATION_SPACE    ConfigType = 2
	ConfigType_CONFIG_TYPE_APPLICATION          ConfigType = 4
	ConfigType_CONFIG_TYPE_APP_AGENT            ConfigType = 5
	ConfigType_CONFIG_TYPE_APP_AGENT_CREDENTIAL ConfigType = 6
	ConfigType_CONFIG_TYPE_SERVICE_ACCOUNT      ConfigType = 18
	ConfigType_CONFIG_TYPE_SERVICE_CREDENTIAL   ConfigType = 19
	ConfigType_CONFIG_TYPE_EVENT_SINK           ConfigType = 27
	ConfigType_CONFIG_TYPE_TOKEN_INTROSPECT     ConfigType = 30
	ConfigType_CONFIG_TYPE_AUTHORIZATION_POLICY ConfigType = 22
	// CONFIG_TYPE_RESOURCE = 25; // Not use in Config API, but in Ingest/IKG
	// CONFIG_TYPE_RELATION = 26; // Not use in Config API, but in Ingest/IKG
	ConfigType_CONFIG_TYPE_NODE                     ConfigType = 28
	ConfigType_CONFIG_TYPE_CONSENT                  ConfigType = 29
	ConfigType_CONFIG_TYPE_INGEST_PIPELINE          ConfigType = 31
	ConfigType_CONFIG_TYPE_ENTITY_MATCHING_PIPELINE ConfigType = 32
	ConfigType_CONFIG_TYPE_EXTERNAL_DATA_RESOLVER   ConfigType = 33
	ConfigType_CONFIG_TYPE_TRUST_SCORE_PROFILE      ConfigType = 34
	ConfigType_CONFIG_TYPE_KNOWLEDGE_QUERY          ConfigType = 35
	ConfigType_CONFIG_TYPE_CAPTURE_PIPELINE         ConfigType = 36
	ConfigType_CONFIG_TYPE_CAPTURE_PIPELINE_TOPIC   ConfigType = 37
)

// Enum value maps for ConfigType.
var (
	ConfigType_name = map[int32]string{
		0:  "CONFIG_TYPE_INVALID",
		1:  "CONFIG_TYPE_CUSTOMER",
		2:  "CONFIG_TYPE_APPLICATION_SPACE",
		4:  "CONFIG_TYPE_APPLICATION",
		5:  "CONFIG_TYPE_APP_AGENT",
		6:  "CONFIG_TYPE_APP_AGENT_CREDENTIAL",
		18: "CONFIG_TYPE_SERVICE_ACCOUNT",
		19: "CONFIG_TYPE_SERVICE_CREDENTIAL",
		27: "CONFIG_TYPE_EVENT_SINK",
		30: "CONFIG_TYPE_TOKEN_INTROSPECT",
		22: "CONFIG_TYPE_AUTHORIZATION_POLICY",
		28: "CONFIG_TYPE_NODE",
		29: "CONFIG_TYPE_CONSENT",
		31: "CONFIG_TYPE_INGEST_PIPELINE",
		32: "CONFIG_TYPE_ENTITY_MATCHING_PIPELINE",
		33: "CONFIG_TYPE_EXTERNAL_DATA_RESOLVER",
		34: "CONFIG_TYPE_TRUST_SCORE_PROFILE",
		35: "CONFIG_TYPE_KNOWLEDGE_QUERY",
		36: "CONFIG_TYPE_CAPTURE_PIPELINE",
		37: "CONFIG_TYPE_CAPTURE_PIPELINE_TOPIC",
	}
	ConfigType_value = map[string]int32{
		"CONFIG_TYPE_INVALID":                  0,
		"CONFIG_TYPE_CUSTOMER":                 1,
		"CONFIG_TYPE_APPLICATION_SPACE":        2,
		"CONFIG_TYPE_APPLICATION":              4,
		"CONFIG_TYPE_APP_AGENT":                5,
		"CONFIG_TYPE_APP_AGENT_CREDENTIAL":     6,
		"CONFIG_TYPE_SERVICE_ACCOUNT":          18,
		"CONFIG_TYPE_SERVICE_CREDENTIAL":       19,
		"CONFIG_TYPE_EVENT_SINK":               27,
		"CONFIG_TYPE_TOKEN_INTROSPECT":         30,
		"CONFIG_TYPE_AUTHORIZATION_POLICY":     22,
		"CONFIG_TYPE_NODE":                     28,
		"CONFIG_TYPE_CONSENT":                  29,
		"CONFIG_TYPE_INGEST_PIPELINE":          31,
		"CONFIG_TYPE_ENTITY_MATCHING_PIPELINE": 32,
		"CONFIG_TYPE_EXTERNAL_DATA_RESOLVER":   33,
		"CONFIG_TYPE_TRUST_SCORE_PROFILE":      34,
		"CONFIG_TYPE_KNOWLEDGE_QUERY":          35,
		"CONFIG_TYPE_CAPTURE_PIPELINE":         36,
		"CONFIG_TYPE_CAPTURE_PIPELINE_TOPIC":   37,
	}
)

func (x ConfigType) Enum() *ConfigType {
	p := new(ConfigType)
	*p = x
	return p
}

func (x ConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[0].Descriptor()
}

func (ConfigType) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[0]
}

func (x ConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigType.Descriptor instead.
func (ConfigType) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{0}
}

type ExternalTokenStatus int32

const (
	ExternalTokenStatus_EXTERNAL_TOKEN_STATUS_INVALID  ExternalTokenStatus = 0
	ExternalTokenStatus_EXTERNAL_TOKEN_STATUS_ENFORCE  ExternalTokenStatus = 1
	ExternalTokenStatus_EXTERNAL_TOKEN_STATUS_ALLOW    ExternalTokenStatus = 2
	ExternalTokenStatus_EXTERNAL_TOKEN_STATUS_DISALLOW ExternalTokenStatus = 3
)

// Enum value maps for ExternalTokenStatus.
var (
	ExternalTokenStatus_name = map[int32]string{
		0: "EXTERNAL_TOKEN_STATUS_INVALID",
		1: "EXTERNAL_TOKEN_STATUS_ENFORCE",
		2: "EXTERNAL_TOKEN_STATUS_ALLOW",
		3: "EXTERNAL_TOKEN_STATUS_DISALLOW",
	}
	ExternalTokenStatus_value = map[string]int32{
		"EXTERNAL_TOKEN_STATUS_INVALID":  0,
		"EXTERNAL_TOKEN_STATUS_ENFORCE":  1,
		"EXTERNAL_TOKEN_STATUS_ALLOW":    2,
		"EXTERNAL_TOKEN_STATUS_DISALLOW": 3,
	}
)

func (x ExternalTokenStatus) Enum() *ExternalTokenStatus {
	p := new(ExternalTokenStatus)
	*p = x
	return p
}

func (x ExternalTokenStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalTokenStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[1].Descriptor()
}

func (ExternalTokenStatus) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[1]
}

func (x ExternalTokenStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalTokenStatus.Descriptor instead.
func (ExternalTokenStatus) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{1}
}

type IngestPipelineOperation int32

const (
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_INVALID                      IngestPipelineOperation = 0
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_UPSERT_NODE                  IngestPipelineOperation = 1
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_UPSERT_RELATIONSHIP          IngestPipelineOperation = 2
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_DELETE_NODE                  IngestPipelineOperation = 3
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP          IngestPipelineOperation = 4
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_DELETE_NODE_PROPERTY         IngestPipelineOperation = 5
	IngestPipelineOperation_INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP_PROPERTY IngestPipelineOperation = 6
)

// Enum value maps for IngestPipelineOperation.
var (
	IngestPipelineOperation_name = map[int32]string{
		0: "INGEST_PIPELINE_OPERATION_INVALID",
		1: "INGEST_PIPELINE_OPERATION_UPSERT_NODE",
		2: "INGEST_PIPELINE_OPERATION_UPSERT_RELATIONSHIP",
		3: "INGEST_PIPELINE_OPERATION_DELETE_NODE",
		4: "INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP",
		5: "INGEST_PIPELINE_OPERATION_DELETE_NODE_PROPERTY",
		6: "INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP_PROPERTY",
	}
	IngestPipelineOperation_value = map[string]int32{
		"INGEST_PIPELINE_OPERATION_INVALID":                      0,
		"INGEST_PIPELINE_OPERATION_UPSERT_NODE":                  1,
		"INGEST_PIPELINE_OPERATION_UPSERT_RELATIONSHIP":          2,
		"INGEST_PIPELINE_OPERATION_DELETE_NODE":                  3,
		"INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP":          4,
		"INGEST_PIPELINE_OPERATION_DELETE_NODE_PROPERTY":         5,
		"INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP_PROPERTY": 6,
	}
)

func (x IngestPipelineOperation) Enum() *IngestPipelineOperation {
	p := new(IngestPipelineOperation)
	*p = x
	return p
}

func (x IngestPipelineOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IngestPipelineOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[2].Descriptor()
}

func (IngestPipelineOperation) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[2]
}

func (x IngestPipelineOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IngestPipelineOperation.Descriptor instead.
func (IngestPipelineOperation) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{2}
}

type ExternalDataResolverConfig_ContentType int32

const (
	ExternalDataResolverConfig_CONTENT_TYPE_INVALID ExternalDataResolverConfig_ContentType = 0
	ExternalDataResolverConfig_CONTENT_TYPE_JSON    ExternalDataResolverConfig_ContentType = 1
)

// Enum value maps for ExternalDataResolverConfig_ContentType.
var (
	ExternalDataResolverConfig_ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_INVALID",
		1: "CONTENT_TYPE_JSON",
	}
	ExternalDataResolverConfig_ContentType_value = map[string]int32{
		"CONTENT_TYPE_INVALID": 0,
		"CONTENT_TYPE_JSON":    1,
	}
)

func (x ExternalDataResolverConfig_ContentType) Enum() *ExternalDataResolverConfig_ContentType {
	p := new(ExternalDataResolverConfig_ContentType)
	*p = x
	return p
}

func (x ExternalDataResolverConfig_ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalDataResolverConfig_ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[3].Descriptor()
}

func (ExternalDataResolverConfig_ContentType) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[3]
}

func (x ExternalDataResolverConfig_ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalDataResolverConfig_ContentType.Descriptor instead.
func (ExternalDataResolverConfig_ContentType) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{12, 0}
}

type AuthorizationPolicyConfig_Status int32

const (
	AuthorizationPolicyConfig_STATUS_INVALID  AuthorizationPolicyConfig_Status = 0
	AuthorizationPolicyConfig_STATUS_ACTIVE   AuthorizationPolicyConfig_Status = 1
	AuthorizationPolicyConfig_STATUS_INACTIVE AuthorizationPolicyConfig_Status = 2
	AuthorizationPolicyConfig_STATUS_DRAFT    AuthorizationPolicyConfig_Status = 3
)

// Enum value maps for AuthorizationPolicyConfig_Status.
var (
	AuthorizationPolicyConfig_Status_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_ACTIVE",
		2: "STATUS_INACTIVE",
		3: "STATUS_DRAFT",
	}
	AuthorizationPolicyConfig_Status_value = map[string]int32{
		"STATUS_INVALID":  0,
		"STATUS_ACTIVE":   1,
		"STATUS_INACTIVE": 2,
		"STATUS_DRAFT":    3,
	}
)

func (x AuthorizationPolicyConfig_Status) Enum() *AuthorizationPolicyConfig_Status {
	p := new(AuthorizationPolicyConfig_Status)
	*p = x
	return p
}

func (x AuthorizationPolicyConfig_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizationPolicyConfig_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[4].Descriptor()
}

func (AuthorizationPolicyConfig_Status) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[4]
}

func (x AuthorizationPolicyConfig_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizationPolicyConfig_Status.Descriptor instead.
func (AuthorizationPolicyConfig_Status) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{13, 0}
}

type EntityMatchingPipelineConfig_Status int32

const (
	EntityMatchingPipelineConfig_STATUS_INVALID     EntityMatchingPipelineConfig_Status = 0
	EntityMatchingPipelineConfig_STATUS_PENDING     EntityMatchingPipelineConfig_Status = 1
	EntityMatchingPipelineConfig_STATUS_IN_PROGRESS EntityMatchingPipelineConfig_Status = 2
	EntityMatchingPipelineConfig_STATUS_SUCCESS     EntityMatchingPipelineConfig_Status = 3
	EntityMatchingPipelineConfig_STATUS_ERROR       EntityMatchingPipelineConfig_Status = 4
)

// Enum value maps for EntityMatchingPipelineConfig_Status.
var (
	EntityMatchingPipelineConfig_Status_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_PENDING",
		2: "STATUS_IN_PROGRESS",
		3: "STATUS_SUCCESS",
		4: "STATUS_ERROR",
	}
	EntityMatchingPipelineConfig_Status_value = map[string]int32{
		"STATUS_INVALID":     0,
		"STATUS_PENDING":     1,
		"STATUS_IN_PROGRESS": 2,
		"STATUS_SUCCESS":     3,
		"STATUS_ERROR":       4,
	}
)

func (x EntityMatchingPipelineConfig_Status) Enum() *EntityMatchingPipelineConfig_Status {
	p := new(EntityMatchingPipelineConfig_Status)
	*p = x
	return p
}

func (x EntityMatchingPipelineConfig_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityMatchingPipelineConfig_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[5].Descriptor()
}

func (EntityMatchingPipelineConfig_Status) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[5]
}

func (x EntityMatchingPipelineConfig_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityMatchingPipelineConfig_Status.Descriptor instead.
func (EntityMatchingPipelineConfig_Status) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{19, 0}
}

type TrustScoreDimension_Name int32

const (
	TrustScoreDimension_NAME_INVALID      TrustScoreDimension_Name = 0
	TrustScoreDimension_NAME_FRESHNESS    TrustScoreDimension_Name = 1
	TrustScoreDimension_NAME_COMPLETENESS TrustScoreDimension_Name = 2
	TrustScoreDimension_NAME_VALIDITY     TrustScoreDimension_Name = 3
	TrustScoreDimension_NAME_ORIGIN       TrustScoreDimension_Name = 4
	TrustScoreDimension_NAME_VERIFICATION TrustScoreDimension_Name = 5
)

// Enum value maps for TrustScoreDimension_Name.
var (
	TrustScoreDimension_Name_name = map[int32]string{
		0: "NAME_INVALID",
		1: "NAME_FRESHNESS",
		2: "NAME_COMPLETENESS",
		3: "NAME_VALIDITY",
		4: "NAME_ORIGIN",
		5: "NAME_VERIFICATION",
	}
	TrustScoreDimension_Name_value = map[string]int32{
		"NAME_INVALID":      0,
		"NAME_FRESHNESS":    1,
		"NAME_COMPLETENESS": 2,
		"NAME_VALIDITY":     3,
		"NAME_ORIGIN":       4,
		"NAME_VERIFICATION": 5,
	}
)

func (x TrustScoreDimension_Name) Enum() *TrustScoreDimension_Name {
	p := new(TrustScoreDimension_Name)
	*p = x
	return p
}

func (x TrustScoreDimension_Name) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrustScoreDimension_Name) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[6].Descriptor()
}

func (TrustScoreDimension_Name) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[6]
}

func (x TrustScoreDimension_Name) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrustScoreDimension_Name.Descriptor instead.
func (TrustScoreDimension_Name) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{20, 0}
}

type TrustScoreProfileConfig_UpdateFrequency int32

const (
	TrustScoreProfileConfig_UPDATE_FREQUENCY_INVALID      TrustScoreProfileConfig_UpdateFrequency = 0
	TrustScoreProfileConfig_UPDATE_FREQUENCY_THREE_HOURS  TrustScoreProfileConfig_UpdateFrequency = 1
	TrustScoreProfileConfig_UPDATE_FREQUENCY_SIX_HOURS    TrustScoreProfileConfig_UpdateFrequency = 2
	TrustScoreProfileConfig_UPDATE_FREQUENCY_TWELVE_HOURS TrustScoreProfileConfig_UpdateFrequency = 3
	TrustScoreProfileConfig_UPDATE_FREQUENCY_DAILY        TrustScoreProfileConfig_UpdateFrequency = 4
)

// Enum value maps for TrustScoreProfileConfig_UpdateFrequency.
var (
	TrustScoreProfileConfig_UpdateFrequency_name = map[int32]string{
		0: "UPDATE_FREQUENCY_INVALID",
		1: "UPDATE_FREQUENCY_THREE_HOURS",
		2: "UPDATE_FREQUENCY_SIX_HOURS",
		3: "UPDATE_FREQUENCY_TWELVE_HOURS",
		4: "UPDATE_FREQUENCY_DAILY",
	}
	TrustScoreProfileConfig_UpdateFrequency_value = map[string]int32{
		"UPDATE_FREQUENCY_INVALID":      0,
		"UPDATE_FREQUENCY_THREE_HOURS":  1,
		"UPDATE_FREQUENCY_SIX_HOURS":    2,
		"UPDATE_FREQUENCY_TWELVE_HOURS": 3,
		"UPDATE_FREQUENCY_DAILY":        4,
	}
)

func (x TrustScoreProfileConfig_UpdateFrequency) Enum() *TrustScoreProfileConfig_UpdateFrequency {
	p := new(TrustScoreProfileConfig_UpdateFrequency)
	*p = x
	return p
}

func (x TrustScoreProfileConfig_UpdateFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrustScoreProfileConfig_UpdateFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[7].Descriptor()
}

func (TrustScoreProfileConfig_UpdateFrequency) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[7]
}

func (x TrustScoreProfileConfig_UpdateFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrustScoreProfileConfig_UpdateFrequency.Descriptor instead.
func (TrustScoreProfileConfig_UpdateFrequency) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{21, 0}
}

type KnowledgeQueryConfig_Status int32

const (
	KnowledgeQueryConfig_STATUS_INVALID  KnowledgeQueryConfig_Status = 0
	KnowledgeQueryConfig_STATUS_ACTIVE   KnowledgeQueryConfig_Status = 1
	KnowledgeQueryConfig_STATUS_INACTIVE KnowledgeQueryConfig_Status = 2
	KnowledgeQueryConfig_STATUS_DRAFT    KnowledgeQueryConfig_Status = 3
)

// Enum value maps for KnowledgeQueryConfig_Status.
var (
	KnowledgeQueryConfig_Status_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_ACTIVE",
		2: "STATUS_INACTIVE",
		3: "STATUS_DRAFT",
	}
	KnowledgeQueryConfig_Status_value = map[string]int32{
		"STATUS_INVALID":  0,
		"STATUS_ACTIVE":   1,
		"STATUS_INACTIVE": 2,
		"STATUS_DRAFT":    3,
	}
)

func (x KnowledgeQueryConfig_Status) Enum() *KnowledgeQueryConfig_Status {
	p := new(KnowledgeQueryConfig_Status)
	*p = x
	return p
}

func (x KnowledgeQueryConfig_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KnowledgeQueryConfig_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_indykite_auditsink_v1beta1_config_proto_enumTypes[8].Descriptor()
}

func (KnowledgeQueryConfig_Status) Type() protoreflect.EnumType {
	return &file_indykite_auditsink_v1beta1_config_proto_enumTypes[8]
}

func (x KnowledgeQueryConfig_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KnowledgeQueryConfig_Status.Descriptor instead.
func (KnowledgeQueryConfig_Status) EnumDescriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{22, 0}
}

type ContainersPath struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CustomerId         string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	ApplicationSpaceId string                 `protobuf:"bytes,2,opt,name=application_space_id,json=applicationSpaceId,proto3" json:"application_space_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ContainersPath) Reset() {
	*x = ContainersPath{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainersPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainersPath) ProtoMessage() {}

func (x *ContainersPath) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainersPath.ProtoReflect.Descriptor instead.
func (*ContainersPath) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{0}
}

func (x *ContainersPath) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ContainersPath) GetApplicationSpaceId() string {
	if x != nil {
		return x.ApplicationSpaceId
	}
	return ""
}

type CreatedConfig struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Id             string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           ConfigType              `protobuf:"varint,2,opt,name=type,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"type,omitempty"`
	Location       *CreatedConfig_Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	ContainersPath *ContainersPath         `protobuf:"bytes,5,opt,name=containers_path,json=containersPath,proto3" json:"containers_path,omitempty"`
	Detail         *ConfigDetail           `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreatedConfig) Reset() {
	*x = CreatedConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatedConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedConfig) ProtoMessage() {}

func (x *CreatedConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedConfig.ProtoReflect.Descriptor instead.
func (*CreatedConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{1}
}

func (x *CreatedConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatedConfig) GetType() ConfigType {
	if x != nil {
		return x.Type
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *CreatedConfig) GetLocation() *CreatedConfig_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CreatedConfig) GetContainersPath() *ContainersPath {
	if x != nil {
		return x.ContainersPath
	}
	return nil
}

func (x *CreatedConfig) GetDetail() *ConfigDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type ReadConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*ReadConfig_Id
	//	*ReadConfig_Name
	Identifier     isReadConfig_Identifier `protobuf_oneof:"identifier"`
	ContainersPath *ContainersPath         `protobuf:"bytes,4,opt,name=containers_path,json=containersPath,proto3" json:"containers_path,omitempty"`
	Type           ConfigType              `protobuf:"varint,3,opt,name=type,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReadConfig) Reset() {
	*x = ReadConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConfig) ProtoMessage() {}

func (x *ReadConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConfig.ProtoReflect.Descriptor instead.
func (*ReadConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{2}
}

func (x *ReadConfig) GetIdentifier() isReadConfig_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ReadConfig) GetId() string {
	if x != nil {
		if x, ok := x.Identifier.(*ReadConfig_Id); ok {
			return x.Id
		}
	}
	return ""
}

func (x *ReadConfig) GetName() *ReadConfig_NameIdentifier {
	if x != nil {
		if x, ok := x.Identifier.(*ReadConfig_Name); ok {
			return x.Name
		}
	}
	return nil
}

func (x *ReadConfig) GetContainersPath() *ContainersPath {
	if x != nil {
		return x.ContainersPath
	}
	return nil
}

func (x *ReadConfig) GetType() ConfigType {
	if x != nil {
		return x.Type
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

type isReadConfig_Identifier interface {
	isReadConfig_Identifier()
}

type ReadConfig_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type ReadConfig_Name struct {
	Name *ReadConfig_NameIdentifier `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*ReadConfig_Id) isReadConfig_Identifier() {}

func (*ReadConfig_Name) isReadConfig_Identifier() {}

type UpdatedConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           ConfigType             `protobuf:"varint,2,opt,name=type,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"type,omitempty"`
	ContainersPath *ContainersPath        `protobuf:"bytes,5,opt,name=containers_path,json=containersPath,proto3" json:"containers_path,omitempty"`
	Before         *ConfigDetail          `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After          *ConfigDetail          `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdatedConfig) Reset() {
	*x = UpdatedConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedConfig) ProtoMessage() {}

func (x *UpdatedConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedConfig.ProtoReflect.Descriptor instead.
func (*UpdatedConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatedConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatedConfig) GetType() ConfigType {
	if x != nil {
		return x.Type
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *UpdatedConfig) GetContainersPath() *ContainersPath {
	if x != nil {
		return x.ContainersPath
	}
	return nil
}

func (x *UpdatedConfig) GetBefore() *ConfigDetail {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *UpdatedConfig) GetAfter() *ConfigDetail {
	if x != nil {
		return x.After
	}
	return nil
}

type DeletedConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           ConfigType             `protobuf:"varint,2,opt,name=type,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"type,omitempty"`
	ContainersPath *ContainersPath        `protobuf:"bytes,3,opt,name=containers_path,json=containersPath,proto3" json:"containers_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeletedConfig) Reset() {
	*x = DeletedConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletedConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedConfig) ProtoMessage() {}

func (x *DeletedConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedConfig.ProtoReflect.Descriptor instead.
func (*DeletedConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{4}
}

func (x *DeletedConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletedConfig) GetType() ConfigType {
	if x != nil {
		return x.Type
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *DeletedConfig) GetContainersPath() *ContainersPath {
	if x != nil {
		return x.ContainersPath
	}
	return nil
}

type ConfigDetail struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Configuration:
	//
	//	*ConfigDetail_ApplicationSpace
	//	*ConfigDetail_ApplicationAgent
	//	*ConfigDetail_ApplicationAgentCredential
	//	*ConfigDetail_ServiceAccountCredential
	//	*ConfigDetail_EventSinkConfig
	//	*ConfigDetail_AuthorizationPolicyConfig
	//	*ConfigDetail_TokenIntrospectConfig
	//	*ConfigDetail_ExternalDataResolverConfig
	//	*ConfigDetail_TrustScoreProfileConfig
	//	*ConfigDetail_ConsentConfig
	//	*ConfigDetail_IngestPipelineConfig
	//	*ConfigDetail_EntityMatchingPipelineConfig
	//	*ConfigDetail_KnowledgeQueryConfig
	//	*ConfigDetail_CapturePipelineConfig
	//	*ConfigDetail_CapturePipelineTopicConfig
	Configuration isConfigDetail_Configuration `protobuf_oneof:"configuration"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigDetail) Reset() {
	*x = ConfigDetail{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetail) ProtoMessage() {}

func (x *ConfigDetail) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetail.ProtoReflect.Descriptor instead.
func (*ConfigDetail) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigDetail) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ConfigDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConfigDetail) GetConfiguration() isConfigDetail_Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ConfigDetail) GetApplicationSpace() *ApplicationSpaceConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ApplicationSpace); ok {
			return x.ApplicationSpace
		}
	}
	return nil
}

func (x *ConfigDetail) GetApplicationAgent() *ApplicationAgentConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ApplicationAgent); ok {
			return x.ApplicationAgent
		}
	}
	return nil
}

func (x *ConfigDetail) GetApplicationAgentCredential() *ApplicationAgentCredentialConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ApplicationAgentCredential); ok {
			return x.ApplicationAgentCredential
		}
	}
	return nil
}

func (x *ConfigDetail) GetServiceAccountCredential() *ServiceAccountCredentialConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ServiceAccountCredential); ok {
			return x.ServiceAccountCredential
		}
	}
	return nil
}

func (x *ConfigDetail) GetEventSinkConfig() *EventSinkConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_EventSinkConfig); ok {
			return x.EventSinkConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetAuthorizationPolicyConfig() *AuthorizationPolicyConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_AuthorizationPolicyConfig); ok {
			return x.AuthorizationPolicyConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetTokenIntrospectConfig() *TokenIntrospectConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_TokenIntrospectConfig); ok {
			return x.TokenIntrospectConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetExternalDataResolverConfig() *ExternalDataResolverConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ExternalDataResolverConfig); ok {
			return x.ExternalDataResolverConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetTrustScoreProfileConfig() *TrustScoreProfileConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_TrustScoreProfileConfig); ok {
			return x.TrustScoreProfileConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetConsentConfig() *ConsentConfiguration {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_ConsentConfig); ok {
			return x.ConsentConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetIngestPipelineConfig() *IngestPipelineConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_IngestPipelineConfig); ok {
			return x.IngestPipelineConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetEntityMatchingPipelineConfig() *EntityMatchingPipelineConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_EntityMatchingPipelineConfig); ok {
			return x.EntityMatchingPipelineConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetKnowledgeQueryConfig() *KnowledgeQueryConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_KnowledgeQueryConfig); ok {
			return x.KnowledgeQueryConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetCapturePipelineConfig() *CapturePipelineConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_CapturePipelineConfig); ok {
			return x.CapturePipelineConfig
		}
	}
	return nil
}

func (x *ConfigDetail) GetCapturePipelineTopicConfig() *CapturePipelineTopicConfig {
	if x != nil {
		if x, ok := x.Configuration.(*ConfigDetail_CapturePipelineTopicConfig); ok {
			return x.CapturePipelineTopicConfig
		}
	}
	return nil
}

type isConfigDetail_Configuration interface {
	isConfigDetail_Configuration()
}

type ConfigDetail_ApplicationSpace struct {
	ApplicationSpace *ApplicationSpaceConfig `protobuf:"bytes,28,opt,name=application_space,json=applicationSpace,proto3,oneof"`
}

type ConfigDetail_ApplicationAgent struct {
	ApplicationAgent *ApplicationAgentConfig `protobuf:"bytes,27,opt,name=application_agent,json=applicationAgent,proto3,oneof"`
}

type ConfigDetail_ApplicationAgentCredential struct {
	ApplicationAgentCredential *ApplicationAgentCredentialConfig `protobuf:"bytes,8,opt,name=application_agent_credential,json=applicationAgentCredential,proto3,oneof"`
}

type ConfigDetail_ServiceAccountCredential struct {
	ServiceAccountCredential *ServiceAccountCredentialConfig `protobuf:"bytes,9,opt,name=service_account_credential,json=serviceAccountCredential,proto3,oneof"`
}

type ConfigDetail_EventSinkConfig struct {
	EventSinkConfig *EventSinkConfig `protobuf:"bytes,12,opt,name=event_sink_config,json=eventSinkConfig,proto3,oneof"`
}

type ConfigDetail_AuthorizationPolicyConfig struct {
	AuthorizationPolicyConfig *AuthorizationPolicyConfig `protobuf:"bytes,15,opt,name=authorization_policy_config,json=authorizationPolicyConfig,proto3,oneof"`
}

type ConfigDetail_TokenIntrospectConfig struct {
	TokenIntrospectConfig *TokenIntrospectConfig `protobuf:"bytes,19,opt,name=token_introspect_config,json=tokenIntrospectConfig,proto3,oneof"`
}

type ConfigDetail_ExternalDataResolverConfig struct {
	ExternalDataResolverConfig *ExternalDataResolverConfig `protobuf:"bytes,22,opt,name=external_data_resolver_config,json=externalDataResolverConfig,proto3,oneof"`
}

type ConfigDetail_TrustScoreProfileConfig struct {
	TrustScoreProfileConfig *TrustScoreProfileConfig `protobuf:"bytes,23,opt,name=trust_score_profile_config,json=trustScoreProfileConfig,proto3,oneof"`
}

type ConfigDetail_ConsentConfig struct {
	ConsentConfig *ConsentConfiguration `protobuf:"bytes,18,opt,name=consent_config,json=consentConfig,proto3,oneof"`
}

type ConfigDetail_IngestPipelineConfig struct {
	IngestPipelineConfig *IngestPipelineConfig `protobuf:"bytes,20,opt,name=ingest_pipeline_config,json=ingestPipelineConfig,proto3,oneof"`
}

type ConfigDetail_EntityMatchingPipelineConfig struct {
	EntityMatchingPipelineConfig *EntityMatchingPipelineConfig `protobuf:"bytes,21,opt,name=entity_matching_pipeline_config,json=entityMatchingPipelineConfig,proto3,oneof"`
}

type ConfigDetail_KnowledgeQueryConfig struct {
	KnowledgeQueryConfig *KnowledgeQueryConfig `protobuf:"bytes,24,opt,name=knowledge_query_config,json=knowledgeQueryConfig,proto3,oneof"`
}

type ConfigDetail_CapturePipelineConfig struct {
	CapturePipelineConfig *CapturePipelineConfig `protobuf:"bytes,25,opt,name=capture_pipeline_config,json=capturePipelineConfig,proto3,oneof"`
}

type ConfigDetail_CapturePipelineTopicConfig struct {
	CapturePipelineTopicConfig *CapturePipelineTopicConfig `protobuf:"bytes,26,opt,name=capture_pipeline_topic_config,json=capturePipelineTopicConfig,proto3,oneof"`
}

func (*ConfigDetail_ApplicationSpace) isConfigDetail_Configuration() {}

func (*ConfigDetail_ApplicationAgent) isConfigDetail_Configuration() {}

func (*ConfigDetail_ApplicationAgentCredential) isConfigDetail_Configuration() {}

func (*ConfigDetail_ServiceAccountCredential) isConfigDetail_Configuration() {}

func (*ConfigDetail_EventSinkConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_AuthorizationPolicyConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_TokenIntrospectConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_ExternalDataResolverConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_TrustScoreProfileConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_ConsentConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_IngestPipelineConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_EntityMatchingPipelineConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_KnowledgeQueryConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_CapturePipelineConfig) isConfigDetail_Configuration() {}

func (*ConfigDetail_CapturePipelineTopicConfig) isConfigDetail_Configuration() {}

// DB connection details
type DBConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBConnection) Reset() {
	*x = DBConnection{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBConnection) ProtoMessage() {}

func (x *DBConnection) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBConnection.ProtoReflect.Descriptor instead.
func (*DBConnection) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{6}
}

func (x *DBConnection) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DBConnection) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DBConnection) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DBConnection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ApplicationSpaceConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	IkgSize       string                 `protobuf:"bytes,2,opt,name=ikg_size,json=ikgSize,proto3" json:"ikg_size,omitempty"`
	ReplicaRegion string                 `protobuf:"bytes,3,opt,name=replica_region,json=replicaRegion,proto3" json:"replica_region,omitempty"`
	DbConnection  *DBConnection          `protobuf:"bytes,4,opt,name=db_connection,json=dbConnection,proto3" json:"db_connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationSpaceConfig) Reset() {
	*x = ApplicationSpaceConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationSpaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSpaceConfig) ProtoMessage() {}

func (x *ApplicationSpaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSpaceConfig.ProtoReflect.Descriptor instead.
func (*ApplicationSpaceConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationSpaceConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ApplicationSpaceConfig) GetIkgSize() string {
	if x != nil {
		return x.IkgSize
	}
	return ""
}

func (x *ApplicationSpaceConfig) GetReplicaRegion() string {
	if x != nil {
		return x.ReplicaRegion
	}
	return ""
}

func (x *ApplicationSpaceConfig) GetDbConnection() *DBConnection {
	if x != nil {
		return x.DbConnection
	}
	return nil
}

type ApplicationAgentCredentialConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Kid   string                 `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// KeyFormat specify in which format the public key was provided.
	// Could by empty, if no public key was provided.
	KeyFormat     string                 `protobuf:"bytes,2,opt,name=key_format,json=keyFormat,proto3" json:"key_format,omitempty"`
	OriginalKid   string                 `protobuf:"bytes,3,opt,name=original_kid,json=originalKid,proto3" json:"original_kid,omitempty"`
	ExpireTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationAgentCredentialConfig) Reset() {
	*x = ApplicationAgentCredentialConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationAgentCredentialConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAgentCredentialConfig) ProtoMessage() {}

func (x *ApplicationAgentCredentialConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAgentCredentialConfig.ProtoReflect.Descriptor instead.
func (*ApplicationAgentCredentialConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationAgentCredentialConfig) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *ApplicationAgentCredentialConfig) GetKeyFormat() string {
	if x != nil {
		return x.KeyFormat
	}
	return ""
}

func (x *ApplicationAgentCredentialConfig) GetOriginalKid() string {
	if x != nil {
		return x.OriginalKid
	}
	return ""
}

func (x *ApplicationAgentCredentialConfig) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

type ApplicationAgentConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApiPermissions []string               `protobuf:"bytes,1,rep,name=api_permissions,json=apiPermissions,proto3" json:"api_permissions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ApplicationAgentConfig) Reset() {
	*x = ApplicationAgentConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationAgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAgentConfig) ProtoMessage() {}

func (x *ApplicationAgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAgentConfig.ProtoReflect.Descriptor instead.
func (*ApplicationAgentConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{9}
}

func (x *ApplicationAgentConfig) GetApiPermissions() []string {
	if x != nil {
		return x.ApiPermissions
	}
	return nil
}

type ServiceAccountCredentialConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Kid   string                 `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// KeyFormat specify in which format the public key was provided.
	// Could by empty, if no public key was provided.
	KeyFormat     string                 `protobuf:"bytes,2,opt,name=key_format,json=keyFormat,proto3" json:"key_format,omitempty"`
	OriginalKid   string                 `protobuf:"bytes,3,opt,name=original_kid,json=originalKid,proto3" json:"original_kid,omitempty"`
	ExpireTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAccountCredentialConfig) Reset() {
	*x = ServiceAccountCredentialConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAccountCredentialConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccountCredentialConfig) ProtoMessage() {}

func (x *ServiceAccountCredentialConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccountCredentialConfig.ProtoReflect.Descriptor instead.
func (*ServiceAccountCredentialConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceAccountCredentialConfig) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *ServiceAccountCredentialConfig) GetKeyFormat() string {
	if x != nil {
		return x.KeyFormat
	}
	return ""
}

func (x *ServiceAccountCredentialConfig) GetOriginalKid() string {
	if x != nil {
		return x.OriginalKid
	}
	return ""
}

func (x *ServiceAccountCredentialConfig) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

type EventSinkConfig struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Providers     map[string]*EventSinkConfig_Provider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Routes        []*EventSinkConfig_Route             `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig) Reset() {
	*x = EventSinkConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig) ProtoMessage() {}

func (x *EventSinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig.ProtoReflect.Descriptor instead.
func (*EventSinkConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11}
}

func (x *EventSinkConfig) GetProviders() map[string]*EventSinkConfig_Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *EventSinkConfig) GetRoutes() []*EventSinkConfig_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ExternalDataResolverConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Full URL to endpoint that will be called.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// HTTP method to be used for the request.
	Method           string                                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Headers          map[string]string                      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestType      ExternalDataResolverConfig_ContentType `protobuf:"varint,4,opt,name=request_type,json=requestType,proto3,enum=indykite.auditsink.v1beta1.ExternalDataResolverConfig_ContentType" json:"request_type,omitempty"`
	RequestPayload   string                                 `protobuf:"bytes,5,opt,name=request_payload,json=requestPayload,proto3" json:"request_payload,omitempty"`
	ResponseType     ExternalDataResolverConfig_ContentType `protobuf:"varint,6,opt,name=response_type,json=responseType,proto3,enum=indykite.auditsink.v1beta1.ExternalDataResolverConfig_ContentType" json:"response_type,omitempty"`
	ResponseSelector string                                 `protobuf:"bytes,7,opt,name=response_selector,json=responseSelector,proto3" json:"response_selector,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExternalDataResolverConfig) Reset() {
	*x = ExternalDataResolverConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalDataResolverConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalDataResolverConfig) ProtoMessage() {}

func (x *ExternalDataResolverConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalDataResolverConfig.ProtoReflect.Descriptor instead.
func (*ExternalDataResolverConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{12}
}

func (x *ExternalDataResolverConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ExternalDataResolverConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ExternalDataResolverConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ExternalDataResolverConfig) GetRequestType() ExternalDataResolverConfig_ContentType {
	if x != nil {
		return x.RequestType
	}
	return ExternalDataResolverConfig_CONTENT_TYPE_INVALID
}

func (x *ExternalDataResolverConfig) GetRequestPayload() string {
	if x != nil {
		return x.RequestPayload
	}
	return ""
}

func (x *ExternalDataResolverConfig) GetResponseType() ExternalDataResolverConfig_ContentType {
	if x != nil {
		return x.ResponseType
	}
	return ExternalDataResolverConfig_CONTENT_TYPE_INVALID
}

func (x *ExternalDataResolverConfig) GetResponseSelector() string {
	if x != nil {
		return x.ResponseSelector
	}
	return ""
}

type AuthorizationPolicyConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Policy in JSON string format.
	Policy string `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	// Policy status.
	Status AuthorizationPolicyConfig_Status `protobuf:"varint,2,opt,name=status,proto3,enum=indykite.auditsink.v1beta1.AuthorizationPolicyConfig_Status" json:"status,omitempty"`
	// Optional policy tags
	Tags          []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizationPolicyConfig) Reset() {
	*x = AuthorizationPolicyConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizationPolicyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationPolicyConfig) ProtoMessage() {}

func (x *AuthorizationPolicyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationPolicyConfig.ProtoReflect.Descriptor instead.
func (*AuthorizationPolicyConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{13}
}

func (x *AuthorizationPolicyConfig) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *AuthorizationPolicyConfig) GetStatus() AuthorizationPolicyConfig_Status {
	if x != nil {
		return x.Status
	}
	return AuthorizationPolicyConfig_STATUS_INVALID
}

func (x *AuthorizationPolicyConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AssignConfigPermissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TargetIdentifier is gid identifier of Service Account or DigitalTwin.
	TargetIdentifier string `protobuf:"bytes,1,opt,name=target_identifier,json=targetIdentifier,proto3" json:"target_identifier,omitempty"`
	// TargetType is type of TargetIdentifier.
	TargetType ConfigType `protobuf:"varint,2,opt,name=target_type,json=targetType,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"target_type,omitempty"`
	// Permission role id to be assigned.
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	// CustomerId under which to assign permissions.
	CustomerId string `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Object to which Permission will be linked to. Can be Customer, AppSpace or Tenant.
	ObjectId string `protobuf:"bytes,5,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// Object type is type of object_id.
	ObjectType    ConfigType `protobuf:"varint,6,opt,name=object_type,json=objectType,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"object_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignConfigPermissions) Reset() {
	*x = AssignConfigPermissions{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignConfigPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignConfigPermissions) ProtoMessage() {}

func (x *AssignConfigPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignConfigPermissions.ProtoReflect.Descriptor instead.
func (*AssignConfigPermissions) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{14}
}

func (x *AssignConfigPermissions) GetTargetIdentifier() string {
	if x != nil {
		return x.TargetIdentifier
	}
	return ""
}

func (x *AssignConfigPermissions) GetTargetType() ConfigType {
	if x != nil {
		return x.TargetType
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *AssignConfigPermissions) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AssignConfigPermissions) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *AssignConfigPermissions) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *AssignConfigPermissions) GetObjectType() ConfigType {
	if x != nil {
		return x.ObjectType
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

type RevokeConfigPermissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TargetIdentifier is gid identifier of Service Account or DigitalTwin.
	TargetIdentifier string `protobuf:"bytes,1,opt,name=target_identifier,json=targetIdentifier,proto3" json:"target_identifier,omitempty"`
	// TargetType is type of TargetIdentifier.
	TargetType ConfigType `protobuf:"varint,2,opt,name=target_type,json=targetType,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"target_type,omitempty"`
	// Permission role id to be assigned.
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	// CustomerId under which to assign permissions.
	CustomerId string `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Object to which Permission will be linked to. Can be Customer, AppSpace or Tenant.
	ObjectId string `protobuf:"bytes,5,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// Object type is type of object_id.
	ObjectType    ConfigType `protobuf:"varint,6,opt,name=object_type,json=objectType,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"object_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeConfigPermissions) Reset() {
	*x = RevokeConfigPermissions{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeConfigPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeConfigPermissions) ProtoMessage() {}

func (x *RevokeConfigPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeConfigPermissions.ProtoReflect.Descriptor instead.
func (*RevokeConfigPermissions) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{15}
}

func (x *RevokeConfigPermissions) GetTargetIdentifier() string {
	if x != nil {
		return x.TargetIdentifier
	}
	return ""
}

func (x *RevokeConfigPermissions) GetTargetType() ConfigType {
	if x != nil {
		return x.TargetType
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *RevokeConfigPermissions) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RevokeConfigPermissions) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *RevokeConfigPermissions) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RevokeConfigPermissions) GetObjectType() ConfigType {
	if x != nil {
		return x.ObjectType
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

// Token Introspect configuration for AppSpace.
type TokenIntrospectConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token matcher specify for which token this configuration applies.
	// Currently only JWT issuer is supported, regexp for opaque tokens will be implemented later.
	//
	// Types that are valid to be assigned to TokenMatcher:
	//
	//	*TokenIntrospectConfig_Jwt
	//	*TokenIntrospectConfig_Opaque_
	TokenMatcher isTokenIntrospectConfig_TokenMatcher `protobuf_oneof:"token_matcher"`
	// Types that are valid to be assigned to Validation:
	//
	//	*TokenIntrospectConfig_Offline_
	//	*TokenIntrospectConfig_Online_
	Validation isTokenIntrospectConfig_Validation `protobuf_oneof:"validation"`
	// ClaimsMapping specifies which claims from the token should be mapped to IKG Property with given name.
	// Remember, that 'email' claim is always extracted if exists and stored under 'email' key in IKG.
	//
	// Key specify name of property in IKG.
	// Value specifies which claim to map and how.
	ClaimsMapping map[string]*TokenIntrospectConfig_Claim `protobuf:"bytes,7,rep,name=claims_mapping,json=claimsMapping,proto3" json:"claims_mapping,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Node type in IKG to which we will try to match sub claim with DT external_id.
	IkgNodeType string `protobuf:"bytes,5,opt,name=ikg_node_type,json=ikgNodeType,proto3" json:"ikg_node_type,omitempty"`
	// Perform Upsert specify, if we should create and/or update DigitalTwin in IKG if it doesn't exist with.
	// In future this will perform upsert also on properties that are derived from token.
	PerformUpsert bool `protobuf:"varint,6,opt,name=perform_upsert,json=performUpsert,proto3" json:"perform_upsert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig) Reset() {
	*x = TokenIntrospectConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig) ProtoMessage() {}

func (x *TokenIntrospectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16}
}

func (x *TokenIntrospectConfig) GetTokenMatcher() isTokenIntrospectConfig_TokenMatcher {
	if x != nil {
		return x.TokenMatcher
	}
	return nil
}

func (x *TokenIntrospectConfig) GetJwt() *TokenIntrospectConfig_JWT {
	if x != nil {
		if x, ok := x.TokenMatcher.(*TokenIntrospectConfig_Jwt); ok {
			return x.Jwt
		}
	}
	return nil
}

func (x *TokenIntrospectConfig) GetOpaque() *TokenIntrospectConfig_Opaque {
	if x != nil {
		if x, ok := x.TokenMatcher.(*TokenIntrospectConfig_Opaque_); ok {
			return x.Opaque
		}
	}
	return nil
}

func (x *TokenIntrospectConfig) GetValidation() isTokenIntrospectConfig_Validation {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *TokenIntrospectConfig) GetOffline() *TokenIntrospectConfig_Offline {
	if x != nil {
		if x, ok := x.Validation.(*TokenIntrospectConfig_Offline_); ok {
			return x.Offline
		}
	}
	return nil
}

func (x *TokenIntrospectConfig) GetOnline() *TokenIntrospectConfig_Online {
	if x != nil {
		if x, ok := x.Validation.(*TokenIntrospectConfig_Online_); ok {
			return x.Online
		}
	}
	return nil
}

func (x *TokenIntrospectConfig) GetClaimsMapping() map[string]*TokenIntrospectConfig_Claim {
	if x != nil {
		return x.ClaimsMapping
	}
	return nil
}

func (x *TokenIntrospectConfig) GetIkgNodeType() string {
	if x != nil {
		return x.IkgNodeType
	}
	return ""
}

func (x *TokenIntrospectConfig) GetPerformUpsert() bool {
	if x != nil {
		return x.PerformUpsert
	}
	return false
}

type isTokenIntrospectConfig_TokenMatcher interface {
	isTokenIntrospectConfig_TokenMatcher()
}

type TokenIntrospectConfig_Jwt struct {
	Jwt *TokenIntrospectConfig_JWT `protobuf:"bytes,1,opt,name=jwt,proto3,oneof"`
}

type TokenIntrospectConfig_Opaque_ struct {
	Opaque *TokenIntrospectConfig_Opaque `protobuf:"bytes,2,opt,name=opaque,proto3,oneof"`
}

func (*TokenIntrospectConfig_Jwt) isTokenIntrospectConfig_TokenMatcher() {}

func (*TokenIntrospectConfig_Opaque_) isTokenIntrospectConfig_TokenMatcher() {}

type isTokenIntrospectConfig_Validation interface {
	isTokenIntrospectConfig_Validation()
}

type TokenIntrospectConfig_Offline_ struct {
	Offline *TokenIntrospectConfig_Offline `protobuf:"bytes,3,opt,name=offline,proto3,oneof"`
}

type TokenIntrospectConfig_Online_ struct {
	Online *TokenIntrospectConfig_Online `protobuf:"bytes,4,opt,name=online,proto3,oneof"`
}

func (*TokenIntrospectConfig_Offline_) isTokenIntrospectConfig_Validation() {}

func (*TokenIntrospectConfig_Online_) isTokenIntrospectConfig_Validation() {}

type ConsentConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Purpose is a human readable description of the purpose of the consent.
	Purpose string `protobuf:"bytes,1,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Data points is a list of properties related to the Digital twin that the consent is for.
	DataPoints    []string `protobuf:"bytes,2,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	ApplicationId string   `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// ValidityPeriod is the time in seconds that the consent is valid for.
	// The minimum value is 1 day and the maximum value is 2 years.
	ValidityPeriod uint64 `protobuf:"varint,4,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	// Revoke after use is a boolean that determines if the consent should be revoked after it has been used.
	RevokeAfterUse bool                `protobuf:"varint,5,opt,name=revoke_after_use,json=revokeAfterUse,proto3" json:"revoke_after_use,omitempty"`
	TokenStatus    ExternalTokenStatus `protobuf:"varint,7,opt,name=token_status,json=tokenStatus,proto3,enum=indykite.auditsink.v1beta1.ExternalTokenStatus" json:"token_status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConsentConfiguration) Reset() {
	*x = ConsentConfiguration{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsentConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsentConfiguration) ProtoMessage() {}

func (x *ConsentConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsentConfiguration.ProtoReflect.Descriptor instead.
func (*ConsentConfiguration) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{17}
}

func (x *ConsentConfiguration) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *ConsentConfiguration) GetDataPoints() []string {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *ConsentConfiguration) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ConsentConfiguration) GetValidityPeriod() uint64 {
	if x != nil {
		return x.ValidityPeriod
	}
	return 0
}

func (x *ConsentConfiguration) GetRevokeAfterUse() bool {
	if x != nil {
		return x.RevokeAfterUse
	}
	return false
}

func (x *ConsentConfiguration) GetTokenStatus() ExternalTokenStatus {
	if x != nil {
		return x.TokenStatus
	}
	return ExternalTokenStatus_EXTERNAL_TOKEN_STATUS_INVALID
}

type IngestPipelineConfig struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Sources []string               `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	// Deprecated: Marked as deprecated in indykite/auditsink/v1beta1/config.proto.
	Operations    []IngestPipelineOperation `protobuf:"varint,2,rep,packed,name=operations,proto3,enum=indykite.auditsink.v1beta1.IngestPipelineOperation" json:"operations,omitempty"`
	AppAgentToken string                    `protobuf:"bytes,3,opt,name=app_agent_token,json=appAgentToken,proto3" json:"app_agent_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestPipelineConfig) Reset() {
	*x = IngestPipelineConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestPipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestPipelineConfig) ProtoMessage() {}

func (x *IngestPipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestPipelineConfig.ProtoReflect.Descriptor instead.
func (*IngestPipelineConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{18}
}

func (x *IngestPipelineConfig) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

// Deprecated: Marked as deprecated in indykite/auditsink/v1beta1/config.proto.
func (x *IngestPipelineConfig) GetOperations() []IngestPipelineOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *IngestPipelineConfig) GetAppAgentToken() string {
	if x != nil {
		return x.AppAgentToken
	}
	return ""
}

type EntityMatchingPipelineConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// NodeFilter contain a list of source types and a list target node types that will be evaluated.
	NodeFilter *EntityMatchingPipelineConfig_NodeFilter `protobuf:"bytes,1,opt,name=node_filter,json=nodeFilter,proto3" json:"node_filter,omitempty"`
	// SimilarityScoreCutoff defines the threshold (in range [0,1]), above which entities will be automatically matched.
	SimilarityScoreCutoff float32 `protobuf:"fixed32,2,opt,name=similarity_score_cutoff,json=similarityScoreCutoff,proto3" json:"similarity_score_cutoff,omitempty"`
	// PropertyMappingStatus is the status assigned to the pipeline's step that maps node types' properties.
	PropertyMappingStatus EntityMatchingPipelineConfig_Status `protobuf:"varint,3,opt,name=property_mapping_status,json=propertyMappingStatus,proto3,enum=indykite.auditsink.v1beta1.EntityMatchingPipelineConfig_Status" json:"property_mapping_status,omitempty"`
	// Output only. Any error message from the property mapping analysis explaining the current property_mapping_status.
	PropertyMappingMessage *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=property_mapping_message,json=propertyMappingMessage,proto3" json:"property_mapping_message,omitempty"`
	// EntityMappingStatus is the status assigned to the pipeline's step that matches node entities.
	EntityMatchingStatus EntityMatchingPipelineConfig_Status `protobuf:"varint,4,opt,name=entity_matching_status,json=entityMatchingStatus,proto3,enum=indykite.auditsink.v1beta1.EntityMatchingPipelineConfig_Status" json:"entity_matching_status,omitempty"`
	// Output only. Any error message from the entity matching analysis explaining the current entity_matching_status.
	EntityMatchingMessage *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=entity_matching_message,json=entityMatchingMessage,proto3" json:"entity_matching_message,omitempty"`
	// PropertyMappings contains the rules the pipeline will use to match source nodes with target nodes.
	PropertyMappings []*EntityMatchingPipelineConfig_PropertyMapping `protobuf:"bytes,5,rep,name=property_mappings,json=propertyMappings,proto3" json:"property_mappings,omitempty"`
	// RerunInterval is the time between scheduled re-runs.
	RerunInterval string `protobuf:"bytes,6,opt,name=rerun_interval,json=rerunInterval,proto3" json:"rerun_interval,omitempty"`
	// Output only. The time at which the pipeline was last run.
	LastRunTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_run_time,json=lastRunTime,proto3" json:"last_run_time,omitempty"`
	// Output only. The gcs url where the analysis report is stored.
	ReportUrl *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=report_url,json=reportUrl,proto3" json:"report_url,omitempty"`
	// Output only. The format in which the report is stored.
	ReportType    *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityMatchingPipelineConfig) Reset() {
	*x = EntityMatchingPipelineConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityMatchingPipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMatchingPipelineConfig) ProtoMessage() {}

func (x *EntityMatchingPipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMatchingPipelineConfig.ProtoReflect.Descriptor instead.
func (*EntityMatchingPipelineConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{19}
}

func (x *EntityMatchingPipelineConfig) GetNodeFilter() *EntityMatchingPipelineConfig_NodeFilter {
	if x != nil {
		return x.NodeFilter
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetSimilarityScoreCutoff() float32 {
	if x != nil {
		return x.SimilarityScoreCutoff
	}
	return 0
}

func (x *EntityMatchingPipelineConfig) GetPropertyMappingStatus() EntityMatchingPipelineConfig_Status {
	if x != nil {
		return x.PropertyMappingStatus
	}
	return EntityMatchingPipelineConfig_STATUS_INVALID
}

func (x *EntityMatchingPipelineConfig) GetPropertyMappingMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.PropertyMappingMessage
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetEntityMatchingStatus() EntityMatchingPipelineConfig_Status {
	if x != nil {
		return x.EntityMatchingStatus
	}
	return EntityMatchingPipelineConfig_STATUS_INVALID
}

func (x *EntityMatchingPipelineConfig) GetEntityMatchingMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.EntityMatchingMessage
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetPropertyMappings() []*EntityMatchingPipelineConfig_PropertyMapping {
	if x != nil {
		return x.PropertyMappings
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetRerunInterval() string {
	if x != nil {
		return x.RerunInterval
	}
	return ""
}

func (x *EntityMatchingPipelineConfig) GetLastRunTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRunTime
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetReportUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.ReportUrl
	}
	return nil
}

func (x *EntityMatchingPipelineConfig) GetReportType() *wrapperspb.StringValue {
	if x != nil {
		return x.ReportType
	}
	return nil
}

type TrustScoreDimension struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Name          TrustScoreDimension_Name `protobuf:"varint,1,opt,name=name,proto3,enum=indykite.auditsink.v1beta1.TrustScoreDimension_Name" json:"name,omitempty"`
	Weight        float32                  `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustScoreDimension) Reset() {
	*x = TrustScoreDimension{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustScoreDimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustScoreDimension) ProtoMessage() {}

func (x *TrustScoreDimension) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustScoreDimension.ProtoReflect.Descriptor instead.
func (*TrustScoreDimension) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{20}
}

func (x *TrustScoreDimension) GetName() TrustScoreDimension_Name {
	if x != nil {
		return x.Name
	}
	return TrustScoreDimension_NAME_INVALID
}

func (x *TrustScoreDimension) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type TrustScoreProfileConfig struct {
	state              protoimpl.MessageState                  `protogen:"open.v1"`
	NodeClassification string                                  `protobuf:"bytes,1,opt,name=node_classification,json=nodeClassification,proto3" json:"node_classification,omitempty"`
	Dimensions         []*TrustScoreDimension                  `protobuf:"bytes,2,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	Schedule           TrustScoreProfileConfig_UpdateFrequency `protobuf:"varint,3,opt,name=schedule,proto3,enum=indykite.auditsink.v1beta1.TrustScoreProfileConfig_UpdateFrequency" json:"schedule,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TrustScoreProfileConfig) Reset() {
	*x = TrustScoreProfileConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustScoreProfileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustScoreProfileConfig) ProtoMessage() {}

func (x *TrustScoreProfileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustScoreProfileConfig.ProtoReflect.Descriptor instead.
func (*TrustScoreProfileConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{21}
}

func (x *TrustScoreProfileConfig) GetNodeClassification() string {
	if x != nil {
		return x.NodeClassification
	}
	return ""
}

func (x *TrustScoreProfileConfig) GetDimensions() []*TrustScoreDimension {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *TrustScoreProfileConfig) GetSchedule() TrustScoreProfileConfig_UpdateFrequency {
	if x != nil {
		return x.Schedule
	}
	return TrustScoreProfileConfig_UPDATE_FREQUENCY_INVALID
}

type KnowledgeQueryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query definition in JSON format.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Query status.
	Status KnowledgeQueryConfig_Status `protobuf:"varint,2,opt,name=status,proto3,enum=indykite.auditsink.v1beta1.KnowledgeQueryConfig_Status" json:"status,omitempty"`
	// PolicyID is gid formatted ID of the authorization policy that is used to authorize access to queried data.
	PolicyId      string `protobuf:"bytes,3,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KnowledgeQueryConfig) Reset() {
	*x = KnowledgeQueryConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KnowledgeQueryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnowledgeQueryConfig) ProtoMessage() {}

func (x *KnowledgeQueryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnowledgeQueryConfig.ProtoReflect.Descriptor instead.
func (*KnowledgeQueryConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{22}
}

func (x *KnowledgeQueryConfig) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *KnowledgeQueryConfig) GetStatus() KnowledgeQueryConfig_Status {
	if x != nil {
		return x.Status
	}
	return KnowledgeQueryConfig_STATUS_INVALID
}

func (x *KnowledgeQueryConfig) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type CapturePipelineConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppAgentToken string                 `protobuf:"bytes,1,opt,name=app_agent_token,json=appAgentToken,proto3" json:"app_agent_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapturePipelineConfig) Reset() {
	*x = CapturePipelineConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapturePipelineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapturePipelineConfig) ProtoMessage() {}

func (x *CapturePipelineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapturePipelineConfig.ProtoReflect.Descriptor instead.
func (*CapturePipelineConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{23}
}

func (x *CapturePipelineConfig) GetAppAgentToken() string {
	if x != nil {
		return x.AppAgentToken
	}
	return ""
}

type CapturePipelineTopicConfig struct {
	state             protoimpl.MessageState             `protogen:"open.v1"`
	CapturePipelineId string                             `protobuf:"bytes,1,opt,name=capture_pipeline_id,json=capturePipelineId,proto3" json:"capture_pipeline_id,omitempty"`
	Script            *CapturePipelineTopicConfig_Script `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CapturePipelineTopicConfig) Reset() {
	*x = CapturePipelineTopicConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapturePipelineTopicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapturePipelineTopicConfig) ProtoMessage() {}

func (x *CapturePipelineTopicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapturePipelineTopicConfig.ProtoReflect.Descriptor instead.
func (*CapturePipelineTopicConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{24}
}

func (x *CapturePipelineTopicConfig) GetCapturePipelineId() string {
	if x != nil {
		return x.CapturePipelineId
	}
	return ""
}

func (x *CapturePipelineTopicConfig) GetScript() *CapturePipelineTopicConfig_Script {
	if x != nil {
		return x.Script
	}
	return nil
}

type CreatedConfig_Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ConfigType             `protobuf:"varint,2,opt,name=type,proto3,enum=indykite.auditsink.v1beta1.ConfigType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatedConfig_Location) Reset() {
	*x = CreatedConfig_Location{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatedConfig_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedConfig_Location) ProtoMessage() {}

func (x *CreatedConfig_Location) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedConfig_Location.ProtoReflect.Descriptor instead.
func (*CreatedConfig_Location) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreatedConfig_Location) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatedConfig_Location) GetType() ConfigType {
	if x != nil {
		return x.Type
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

type ReadConfig_NameIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// LocationId specify under which container the name search happen. Might be empty if searching customer.
	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// LocationType specify under which container type the name search happen. Might be empty if searching customer.
	LocationType  *ConfigType `protobuf:"varint,2,opt,name=location_type,json=locationType,proto3,enum=indykite.auditsink.v1beta1.ConfigType,oneof" json:"location_type,omitempty"`
	Name          string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadConfig_NameIdentifier) Reset() {
	*x = ReadConfig_NameIdentifier{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadConfig_NameIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConfig_NameIdentifier) ProtoMessage() {}

func (x *ReadConfig_NameIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConfig_NameIdentifier.ProtoReflect.Descriptor instead.
func (*ReadConfig_NameIdentifier) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ReadConfig_NameIdentifier) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *ReadConfig_NameIdentifier) GetLocationType() ConfigType {
	if x != nil && x.LocationType != nil {
		return *x.LocationType
	}
	return ConfigType_CONFIG_TYPE_INVALID
}

func (x *ReadConfig_NameIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventSinkConfig_KafkaSinkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Brokers       []string               `protobuf:"bytes,1,rep,name=brokers,proto3" json:"brokers,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	DisableTls    bool                   `protobuf:"varint,3,opt,name=disable_tls,json=disableTls,proto3" json:"disable_tls,omitempty"`
	TlsSkipVerify bool                   `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig_KafkaSinkConfig) Reset() {
	*x = EventSinkConfig_KafkaSinkConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_KafkaSinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_KafkaSinkConfig) ProtoMessage() {}

func (x *EventSinkConfig_KafkaSinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_KafkaSinkConfig.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_KafkaSinkConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 0}
}

func (x *EventSinkConfig_KafkaSinkConfig) GetBrokers() []string {
	if x != nil {
		return x.Brokers
	}
	return nil
}

func (x *EventSinkConfig_KafkaSinkConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *EventSinkConfig_KafkaSinkConfig) GetDisableTls() bool {
	if x != nil {
		return x.DisableTls
	}
	return false
}

func (x *EventSinkConfig_KafkaSinkConfig) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *EventSinkConfig_KafkaSinkConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EventSinkConfig_KafkaSinkConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type EventSinkConfig_AzureServiceBusSinkConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectionString string                 `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
	QueueOrTopicName string                 `protobuf:"bytes,2,opt,name=queue_or_topic_name,json=queueOrTopicName,proto3" json:"queue_or_topic_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventSinkConfig_AzureServiceBusSinkConfig) Reset() {
	*x = EventSinkConfig_AzureServiceBusSinkConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_AzureServiceBusSinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_AzureServiceBusSinkConfig) ProtoMessage() {}

func (x *EventSinkConfig_AzureServiceBusSinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_AzureServiceBusSinkConfig.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_AzureServiceBusSinkConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 1}
}

func (x *EventSinkConfig_AzureServiceBusSinkConfig) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

func (x *EventSinkConfig_AzureServiceBusSinkConfig) GetQueueOrTopicName() string {
	if x != nil {
		return x.QueueOrTopicName
	}
	return ""
}

type EventSinkConfig_AzureEventGridSinkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicEndpoint string                 `protobuf:"bytes,1,opt,name=topic_endpoint,json=topicEndpoint,proto3" json:"topic_endpoint,omitempty"`
	AccessKey     string                 `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig_AzureEventGridSinkConfig) Reset() {
	*x = EventSinkConfig_AzureEventGridSinkConfig{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_AzureEventGridSinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_AzureEventGridSinkConfig) ProtoMessage() {}

func (x *EventSinkConfig_AzureEventGridSinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_AzureEventGridSinkConfig.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_AzureEventGridSinkConfig) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 2}
}

func (x *EventSinkConfig_AzureEventGridSinkConfig) GetTopicEndpoint() string {
	if x != nil {
		return x.TopicEndpoint
	}
	return ""
}

func (x *EventSinkConfig_AzureEventGridSinkConfig) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

type EventSinkConfig_Provider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Provider:
	//
	//	*EventSinkConfig_Provider_Kafka
	//	*EventSinkConfig_Provider_AzureServiceBus
	//	*EventSinkConfig_Provider_AzureEventGrid
	Provider      isEventSinkConfig_Provider_Provider `protobuf_oneof:"provider"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig_Provider) Reset() {
	*x = EventSinkConfig_Provider{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_Provider) ProtoMessage() {}

func (x *EventSinkConfig_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_Provider.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_Provider) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 3}
}

func (x *EventSinkConfig_Provider) GetProvider() isEventSinkConfig_Provider_Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *EventSinkConfig_Provider) GetKafka() *EventSinkConfig_KafkaSinkConfig {
	if x != nil {
		if x, ok := x.Provider.(*EventSinkConfig_Provider_Kafka); ok {
			return x.Kafka
		}
	}
	return nil
}

func (x *EventSinkConfig_Provider) GetAzureServiceBus() *EventSinkConfig_AzureServiceBusSinkConfig {
	if x != nil {
		if x, ok := x.Provider.(*EventSinkConfig_Provider_AzureServiceBus); ok {
			return x.AzureServiceBus
		}
	}
	return nil
}

func (x *EventSinkConfig_Provider) GetAzureEventGrid() *EventSinkConfig_AzureEventGridSinkConfig {
	if x != nil {
		if x, ok := x.Provider.(*EventSinkConfig_Provider_AzureEventGrid); ok {
			return x.AzureEventGrid
		}
	}
	return nil
}

type isEventSinkConfig_Provider_Provider interface {
	isEventSinkConfig_Provider_Provider()
}

type EventSinkConfig_Provider_Kafka struct {
	Kafka *EventSinkConfig_KafkaSinkConfig `protobuf:"bytes,1,opt,name=kafka,proto3,oneof"`
}

type EventSinkConfig_Provider_AzureServiceBus struct {
	AzureServiceBus *EventSinkConfig_AzureServiceBusSinkConfig `protobuf:"bytes,2,opt,name=azure_service_bus,json=azureServiceBus,proto3,oneof"`
}

type EventSinkConfig_Provider_AzureEventGrid struct {
	AzureEventGrid *EventSinkConfig_AzureEventGridSinkConfig `protobuf:"bytes,3,opt,name=azure_event_grid,json=azureEventGrid,proto3,oneof"`
}

func (*EventSinkConfig_Provider_Kafka) isEventSinkConfig_Provider_Provider() {}

func (*EventSinkConfig_Provider_AzureServiceBus) isEventSinkConfig_Provider_Provider() {}

func (*EventSinkConfig_Provider_AzureEventGrid) isEventSinkConfig_Provider_Provider() {}

type EventSinkConfig_Route struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProviderId     string                 `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	StopProcessing bool                   `protobuf:"varint,2,opt,name=stop_processing,json=stopProcessing,proto3" json:"stop_processing,omitempty"`
	// Types that are valid to be assigned to Filter:
	//
	//	*EventSinkConfig_Route_EventType
	//	*EventSinkConfig_Route_ContextKeyValue
	Filter        isEventSinkConfig_Route_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig_Route) Reset() {
	*x = EventSinkConfig_Route{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_Route) ProtoMessage() {}

func (x *EventSinkConfig_Route) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_Route.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_Route) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 4}
}

func (x *EventSinkConfig_Route) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *EventSinkConfig_Route) GetStopProcessing() bool {
	if x != nil {
		return x.StopProcessing
	}
	return false
}

func (x *EventSinkConfig_Route) GetFilter() isEventSinkConfig_Route_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *EventSinkConfig_Route) GetEventType() string {
	if x != nil {
		if x, ok := x.Filter.(*EventSinkConfig_Route_EventType); ok {
			return x.EventType
		}
	}
	return ""
}

func (x *EventSinkConfig_Route) GetContextKeyValue() *EventSinkConfig_Route_KeyValue {
	if x != nil {
		if x, ok := x.Filter.(*EventSinkConfig_Route_ContextKeyValue); ok {
			return x.ContextKeyValue
		}
	}
	return nil
}

type isEventSinkConfig_Route_Filter interface {
	isEventSinkConfig_Route_Filter()
}

type EventSinkConfig_Route_EventType struct {
	EventType string `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3,oneof"`
}

type EventSinkConfig_Route_ContextKeyValue struct {
	ContextKeyValue *EventSinkConfig_Route_KeyValue `protobuf:"bytes,4,opt,name=context_key_value,json=contextKeyValue,proto3,oneof"`
}

func (*EventSinkConfig_Route_EventType) isEventSinkConfig_Route_Filter() {}

func (*EventSinkConfig_Route_ContextKeyValue) isEventSinkConfig_Route_Filter() {}

type EventSinkConfig_Route_KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSinkConfig_Route_KeyValue) Reset() {
	*x = EventSinkConfig_Route_KeyValue{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSinkConfig_Route_KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSinkConfig_Route_KeyValue) ProtoMessage() {}

func (x *EventSinkConfig_Route_KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSinkConfig_Route_KeyValue.ProtoReflect.Descriptor instead.
func (*EventSinkConfig_Route_KeyValue) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{11, 4, 0}
}

func (x *EventSinkConfig_Route_KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EventSinkConfig_Route_KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// JWT specifies all attributes to match with received token.
type TokenIntrospectConfig_JWT struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Issuer is used to exact match based on `iss` claim in JWT.
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// Audience is used to exact match based on `aud` claim in JWT.
	Audience      string `protobuf:"bytes,2,opt,name=audience,proto3" json:"audience,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig_JWT) Reset() {
	*x = TokenIntrospectConfig_JWT{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig_JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig_JWT) ProtoMessage() {}

func (x *TokenIntrospectConfig_JWT) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig_JWT.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig_JWT) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16, 0}
}

func (x *TokenIntrospectConfig_JWT) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenIntrospectConfig_JWT) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

// Opaque specifies the configuration is for opaque tokens.
type TokenIntrospectConfig_Opaque struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig_Opaque) Reset() {
	*x = TokenIntrospectConfig_Opaque{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig_Opaque) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig_Opaque) ProtoMessage() {}

func (x *TokenIntrospectConfig_Opaque) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig_Opaque.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig_Opaque) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16, 1}
}

// Offline validation works only with JWT.
type TokenIntrospectConfig_Offline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Public JWK to validate signature of JWT.
	// If there are no public keys specified, they will be fetched and cached from
	// jwks_uri at https://jwt-issuer.tld/.well-known/openid-configuration
	PublicJwks    [][]byte `protobuf:"bytes,1,rep,name=public_jwks,json=publicJwks,proto3" json:"public_jwks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig_Offline) Reset() {
	*x = TokenIntrospectConfig_Offline{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig_Offline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig_Offline) ProtoMessage() {}

func (x *TokenIntrospectConfig_Offline) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig_Offline.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig_Offline) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16, 2}
}

func (x *TokenIntrospectConfig_Offline) GetPublicJwks() [][]byte {
	if x != nil {
		return x.PublicJwks
	}
	return nil
}

// Online validation works with both JWT and Opaque tokens.
// It will call userinfo endpoint to validate token and fetch user claims.
type TokenIntrospectConfig_Online struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URI of userinfo endpoint which will be used to validate access token.
	// And also fetch user claims when opaque token is received.
	//
	// It can remain empty, if JWT token matcher is used.
	// Then the URI under "userinfo_endpoint" in .well-known/openid-configuration endpoint is used.
	UserinfoEndpoint string `protobuf:"bytes,1,opt,name=userinfo_endpoint,json=userinfoEndpoint,proto3" json:"userinfo_endpoint,omitempty"`
	// Cache TTL of token validity can be used to minimize calls to userinfo endpoint.
	// The final cache TTL will be set to lower limit of this value and exp claim of JWT token.
	// If not set, token will not be cached and call to userinfo endpoint will be made on every request.
	//
	// However, token validity will be checked first if possible (JWT tokens).
	// If token is expired, userinfo endpoint will not be called, nor cache checked.
	CacheTtl      *durationpb.Duration `protobuf:"bytes,2,opt,name=cache_ttl,json=cacheTtl,proto3" json:"cache_ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig_Online) Reset() {
	*x = TokenIntrospectConfig_Online{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig_Online) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig_Online) ProtoMessage() {}

func (x *TokenIntrospectConfig_Online) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig_Online.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig_Online) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16, 3}
}

func (x *TokenIntrospectConfig_Online) GetUserinfoEndpoint() string {
	if x != nil {
		return x.UserinfoEndpoint
	}
	return ""
}

func (x *TokenIntrospectConfig_Online) GetCacheTtl() *durationpb.Duration {
	if x != nil {
		return x.CacheTtl
	}
	return nil
}

// Claim specify details about claim that will be mapped to IKG.
type TokenIntrospectConfig_Claim struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON selector of property in token claims. Currently just name in top-level object is supported.
	//
	// By default we support all standard claims from OpenID specification https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims,
	// and mapping will fail if claim and data type will not match the standard.
	//
	// For non-standard claims the type will be derived from the JSON.
	Selector      string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenIntrospectConfig_Claim) Reset() {
	*x = TokenIntrospectConfig_Claim{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenIntrospectConfig_Claim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenIntrospectConfig_Claim) ProtoMessage() {}

func (x *TokenIntrospectConfig_Claim) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenIntrospectConfig_Claim.ProtoReflect.Descriptor instead.
func (*TokenIntrospectConfig_Claim) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{16, 4}
}

func (x *TokenIntrospectConfig_Claim) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

type EntityMatchingPipelineConfig_NodeFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SourceNodeTypes is a list of node types that will be compared against the nodes with type in TargetNodeTypes.
	SourceNodeTypes []string `protobuf:"bytes,1,rep,name=source_node_types,json=sourceNodeTypes,proto3" json:"source_node_types,omitempty"`
	// TargetNodeTypes is a list of node types that will be compared against the nodes with type in SourceNodeTypes.
	TargetNodeTypes []string `protobuf:"bytes,2,rep,name=target_node_types,json=targetNodeTypes,proto3" json:"target_node_types,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EntityMatchingPipelineConfig_NodeFilter) Reset() {
	*x = EntityMatchingPipelineConfig_NodeFilter{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityMatchingPipelineConfig_NodeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMatchingPipelineConfig_NodeFilter) ProtoMessage() {}

func (x *EntityMatchingPipelineConfig_NodeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMatchingPipelineConfig_NodeFilter.ProtoReflect.Descriptor instead.
func (*EntityMatchingPipelineConfig_NodeFilter) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{19, 0}
}

func (x *EntityMatchingPipelineConfig_NodeFilter) GetSourceNodeTypes() []string {
	if x != nil {
		return x.SourceNodeTypes
	}
	return nil
}

func (x *EntityMatchingPipelineConfig_NodeFilter) GetTargetNodeTypes() []string {
	if x != nil {
		return x.TargetNodeTypes
	}
	return nil
}

type EntityMatchingPipelineConfig_PropertyMapping struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SourceNodeType is the type of the node that will be compared to nodes of TargetNodeType.
	SourceNodeType string `protobuf:"bytes,1,opt,name=source_node_type,json=sourceNodeType,proto3" json:"source_node_type,omitempty"`
	// SourceNodeProperty is a property of the source node that will be compared to TargetNodeProperty.
	SourceNodeProperty string `protobuf:"bytes,2,opt,name=source_node_property,json=sourceNodeProperty,proto3" json:"source_node_property,omitempty"`
	// TargetNodeType is the type of the node that will be compared to nodes of SourceNodeType.
	TargetNodeType string `protobuf:"bytes,3,opt,name=target_node_type,json=targetNodeType,proto3" json:"target_node_type,omitempty"`
	// TargetNodeProperty is a property of the target node that will be compared to SourceNodeProperty.
	TargetNodeProperty string `protobuf:"bytes,4,opt,name=target_node_property,json=targetNodeProperty,proto3" json:"target_node_property,omitempty"`
	// SimilarityScoreCutoff defines the threshold (in range [0,1]), above which entities will be automatically matched.
	SimilarityScoreCutoff float32 `protobuf:"fixed32,5,opt,name=similarity_score_cutoff,json=similarityScoreCutoff,proto3" json:"similarity_score_cutoff,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) Reset() {
	*x = EntityMatchingPipelineConfig_PropertyMapping{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMatchingPipelineConfig_PropertyMapping) ProtoMessage() {}

func (x *EntityMatchingPipelineConfig_PropertyMapping) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMatchingPipelineConfig_PropertyMapping.ProtoReflect.Descriptor instead.
func (*EntityMatchingPipelineConfig_PropertyMapping) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{19, 1}
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) GetSourceNodeType() string {
	if x != nil {
		return x.SourceNodeType
	}
	return ""
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) GetSourceNodeProperty() string {
	if x != nil {
		return x.SourceNodeProperty
	}
	return ""
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) GetTargetNodeType() string {
	if x != nil {
		return x.TargetNodeType
	}
	return ""
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) GetTargetNodeProperty() string {
	if x != nil {
		return x.TargetNodeProperty
	}
	return ""
}

func (x *EntityMatchingPipelineConfig_PropertyMapping) GetSimilarityScoreCutoff() float32 {
	if x != nil {
		return x.SimilarityScoreCutoff
	}
	return 0
}

type CapturePipelineTopicConfig_Script struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapturePipelineTopicConfig_Script) Reset() {
	*x = CapturePipelineTopicConfig_Script{}
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapturePipelineTopicConfig_Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapturePipelineTopicConfig_Script) ProtoMessage() {}

func (x *CapturePipelineTopicConfig_Script) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_auditsink_v1beta1_config_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapturePipelineTopicConfig_Script.ProtoReflect.Descriptor instead.
func (*CapturePipelineTopicConfig_Script) Descriptor() ([]byte, []int) {
	return file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CapturePipelineTopicConfig_Script) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_indykite_auditsink_v1beta1_config_proto protoreflect.FileDescriptor

const file_indykite_auditsink_v1beta1_config_proto_rawDesc = "" +
	"\n" +
	"'indykite/auditsink/v1beta1/config.proto\x12\x1aindykite.auditsink.v1beta1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"i\n" +
	"\x0eContainersPath\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x120\n" +
	"\x14application_space_id\x18\x02 \x01(\tR\x12applicationSpaceIdJ\x04\b\x03\x10\x04\"\x9a\x03\n" +
	"\rCreatedConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\x04type\x12N\n" +
	"\blocation\x18\x03 \x01(\v22.indykite.auditsink.v1beta1.CreatedConfig.LocationR\blocation\x12S\n" +
	"\x0fcontainers_path\x18\x05 \x01(\v2*.indykite.auditsink.v1beta1.ContainersPathR\x0econtainersPath\x12@\n" +
	"\x06detail\x18\x04 \x01(\v2(.indykite.auditsink.v1beta1.ConfigDetailR\x06detail\x1aV\n" +
	"\bLocation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\x04type\"\xb6\x03\n" +
	"\n" +
	"ReadConfig\x12\x10\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x12K\n" +
	"\x04name\x18\x02 \x01(\v25.indykite.auditsink.v1beta1.ReadConfig.NameIdentifierH\x00R\x04name\x12S\n" +
	"\x0fcontainers_path\x18\x04 \x01(\v2*.indykite.auditsink.v1beta1.ContainersPathR\x0econtainersPath\x12:\n" +
	"\x04type\x18\x03 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\x04type\x1a\xa9\x01\n" +
	"\x0eNameIdentifier\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\tR\n" +
	"locationId\x12P\n" +
	"\rlocation_type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeH\x00R\flocationType\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04nameB\x10\n" +
	"\x0e_location_typeB\f\n" +
	"\n" +
	"identifier\"\xb2\x02\n" +
	"\rUpdatedConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\x04type\x12S\n" +
	"\x0fcontainers_path\x18\x05 \x01(\v2*.indykite.auditsink.v1beta1.ContainersPathR\x0econtainersPath\x12@\n" +
	"\x06before\x18\x03 \x01(\v2(.indykite.auditsink.v1beta1.ConfigDetailR\x06before\x12>\n" +
	"\x05after\x18\x04 \x01(\v2(.indykite.auditsink.v1beta1.ConfigDetailR\x05after\"\xb0\x01\n" +
	"\rDeletedConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12:\n" +
	"\x04type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\x04type\x12S\n" +
	"\x0fcontainers_path\x18\x03 \x01(\v2*.indykite.auditsink.v1beta1.ContainersPathR\x0econtainersPath\"\xb6\x0e\n" +
	"\fConfigDetail\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12a\n" +
	"\x11application_space\x18\x1c \x01(\v22.indykite.auditsink.v1beta1.ApplicationSpaceConfigH\x00R\x10applicationSpace\x12a\n" +
	"\x11application_agent\x18\x1b \x01(\v22.indykite.auditsink.v1beta1.ApplicationAgentConfigH\x00R\x10applicationAgent\x12\x80\x01\n" +
	"\x1capplication_agent_credential\x18\b \x01(\v2<.indykite.auditsink.v1beta1.ApplicationAgentCredentialConfigH\x00R\x1aapplicationAgentCredential\x12z\n" +
	"\x1aservice_account_credential\x18\t \x01(\v2:.indykite.auditsink.v1beta1.ServiceAccountCredentialConfigH\x00R\x18serviceAccountCredential\x12Y\n" +
	"\x11event_sink_config\x18\f \x01(\v2+.indykite.auditsink.v1beta1.EventSinkConfigH\x00R\x0feventSinkConfig\x12w\n" +
	"\x1bauthorization_policy_config\x18\x0f \x01(\v25.indykite.auditsink.v1beta1.AuthorizationPolicyConfigH\x00R\x19authorizationPolicyConfig\x12k\n" +
	"\x17token_introspect_config\x18\x13 \x01(\v21.indykite.auditsink.v1beta1.TokenIntrospectConfigH\x00R\x15tokenIntrospectConfig\x12{\n" +
	"\x1dexternal_data_resolver_config\x18\x16 \x01(\v26.indykite.auditsink.v1beta1.ExternalDataResolverConfigH\x00R\x1aexternalDataResolverConfig\x12r\n" +
	"\x1atrust_score_profile_config\x18\x17 \x01(\v23.indykite.auditsink.v1beta1.TrustScoreProfileConfigH\x00R\x17trustScoreProfileConfig\x12Y\n" +
	"\x0econsent_config\x18\x12 \x01(\v20.indykite.auditsink.v1beta1.ConsentConfigurationH\x00R\rconsentConfig\x12h\n" +
	"\x16ingest_pipeline_config\x18\x14 \x01(\v20.indykite.auditsink.v1beta1.IngestPipelineConfigH\x00R\x14ingestPipelineConfig\x12\x81\x01\n" +
	"\x1fentity_matching_pipeline_config\x18\x15 \x01(\v28.indykite.auditsink.v1beta1.EntityMatchingPipelineConfigH\x00R\x1centityMatchingPipelineConfig\x12h\n" +
	"\x16knowledge_query_config\x18\x18 \x01(\v20.indykite.auditsink.v1beta1.KnowledgeQueryConfigH\x00R\x14knowledgeQueryConfig\x12k\n" +
	"\x17capture_pipeline_config\x18\x19 \x01(\v21.indykite.auditsink.v1beta1.CapturePipelineConfigH\x00R\x15capturePipelineConfig\x12{\n" +
	"\x1dcapture_pipeline_topic_config\x18\x1a \x01(\v26.indykite.auditsink.v1beta1.CapturePipelineTopicConfigH\x00R\x1acapturePipelineTopicConfigB\x0f\n" +
	"\rconfigurationJ\x04\b\x04\x10\x05J\x04\b\n" +
	"\x10\vJ\x04\b\v\x10\fJ\x04\b\r\x10\x0eJ\x04\b\x0e\x10\x0fJ\x04\b\x10\x10\x11J\x04\b\x11\x10\x12\"l\n" +
	"\fDBConnection\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xc1\x01\n" +
	"\x16ApplicationSpaceConfig\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x19\n" +
	"\bikg_size\x18\x02 \x01(\tR\aikgSize\x12%\n" +
	"\x0ereplica_region\x18\x03 \x01(\tR\rreplicaRegion\x12M\n" +
	"\rdb_connection\x18\x04 \x01(\v2(.indykite.auditsink.v1beta1.DBConnectionR\fdbConnection\"\xb3\x01\n" +
	" ApplicationAgentCredentialConfig\x12\x10\n" +
	"\x03kid\x18\x01 \x01(\tR\x03kid\x12\x1d\n" +
	"\n" +
	"key_format\x18\x02 \x01(\tR\tkeyFormat\x12!\n" +
	"\foriginal_kid\x18\x03 \x01(\tR\voriginalKid\x12;\n" +
	"\vexpire_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\"A\n" +
	"\x16ApplicationAgentConfig\x12'\n" +
	"\x0fapi_permissions\x18\x01 \x03(\tR\x0eapiPermissions\"\xb1\x01\n" +
	"\x1eServiceAccountCredentialConfig\x12\x10\n" +
	"\x03kid\x18\x01 \x01(\tR\x03kid\x12\x1d\n" +
	"\n" +
	"key_format\x18\x02 \x01(\tR\tkeyFormat\x12!\n" +
	"\foriginal_kid\x18\x03 \x01(\tR\voriginalKid\x12;\n" +
	"\vexpire_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\"\xbc\n" +
	"\n" +
	"\x0fEventSinkConfig\x12X\n" +
	"\tproviders\x18\x01 \x03(\v2:.indykite.auditsink.v1beta1.EventSinkConfig.ProvidersEntryR\tproviders\x12I\n" +
	"\x06routes\x18\x02 \x03(\v21.indykite.auditsink.v1beta1.EventSinkConfig.RouteR\x06routes\x1a\xc2\x01\n" +
	"\x0fKafkaSinkConfig\x12\x18\n" +
	"\abrokers\x18\x01 \x03(\tR\abrokers\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x1f\n" +
	"\vdisable_tls\x18\x03 \x01(\bR\n" +
	"disableTls\x12&\n" +
	"\x0ftls_skip_verify\x18\x04 \x01(\bR\rtlsSkipVerify\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x1aw\n" +
	"\x19AzureServiceBusSinkConfig\x12+\n" +
	"\x11connection_string\x18\x01 \x01(\tR\x10connectionString\x12-\n" +
	"\x13queue_or_topic_name\x18\x02 \x01(\tR\x10queueOrTopicName\x1a`\n" +
	"\x18AzureEventGridSinkConfig\x12%\n" +
	"\x0etopic_endpoint\x18\x01 \x01(\tR\rtopicEndpoint\x12\x1d\n" +
	"\n" +
	"access_key\x18\x02 \x01(\tR\taccessKey\x1a\xd2\x02\n" +
	"\bProvider\x12S\n" +
	"\x05kafka\x18\x01 \x01(\v2;.indykite.auditsink.v1beta1.EventSinkConfig.KafkaSinkConfigH\x00R\x05kafka\x12s\n" +
	"\x11azure_service_bus\x18\x02 \x01(\v2E.indykite.auditsink.v1beta1.EventSinkConfig.AzureServiceBusSinkConfigH\x00R\x0fazureServiceBus\x12p\n" +
	"\x10azure_event_grid\x18\x03 \x01(\v2D.indykite.auditsink.v1beta1.EventSinkConfig.AzureEventGridSinkConfigH\x00R\x0eazureEventGridB\n" +
	"\n" +
	"\bprovider\x1a\x9a\x02\n" +
	"\x05Route\x12\x1f\n" +
	"\vprovider_id\x18\x01 \x01(\tR\n" +
	"providerId\x12'\n" +
	"\x0fstop_processing\x18\x02 \x01(\bR\x0estopProcessing\x12\x1f\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tH\x00R\teventType\x12h\n" +
	"\x11context_key_value\x18\x04 \x01(\v2:.indykite.auditsink.v1beta1.EventSinkConfig.Route.KeyValueH\x00R\x0fcontextKeyValue\x1a2\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueB\b\n" +
	"\x06filter\x1ar\n" +
	"\x0eProvidersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12J\n" +
	"\x05value\x18\x02 \x01(\v24.indykite.auditsink.v1beta1.EventSinkConfig.ProviderR\x05value:\x028\x01\"\xc7\x04\n" +
	"\x1aExternalDataResolverConfig\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12]\n" +
	"\aheaders\x18\x03 \x03(\v2C.indykite.auditsink.v1beta1.ExternalDataResolverConfig.HeadersEntryR\aheaders\x12e\n" +
	"\frequest_type\x18\x04 \x01(\x0e2B.indykite.auditsink.v1beta1.ExternalDataResolverConfig.ContentTypeR\vrequestType\x12'\n" +
	"\x0frequest_payload\x18\x05 \x01(\tR\x0erequestPayload\x12g\n" +
	"\rresponse_type\x18\x06 \x01(\x0e2B.indykite.auditsink.v1beta1.ExternalDataResolverConfig.ContentTypeR\fresponseType\x12+\n" +
	"\x11response_selector\x18\a \x01(\tR\x10responseSelector\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\">\n" +
	"\vContentType\x12\x18\n" +
	"\x14CONTENT_TYPE_INVALID\x10\x00\x12\x15\n" +
	"\x11CONTENT_TYPE_JSON\x10\x01\"\xf5\x01\n" +
	"\x19AuthorizationPolicyConfig\x12\x16\n" +
	"\x06policy\x18\x01 \x01(\tR\x06policy\x12T\n" +
	"\x06status\x18\x02 \x01(\x0e2<.indykite.auditsink.v1beta1.AuthorizationPolicyConfig.StatusR\x06status\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\"V\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_INVALID\x10\x00\x12\x11\n" +
	"\rSTATUS_ACTIVE\x10\x01\x12\x13\n" +
	"\x0fSTATUS_INACTIVE\x10\x02\x12\x10\n" +
	"\fSTATUS_DRAFT\x10\x03\"\xaa\x02\n" +
	"\x17AssignConfigPermissions\x12+\n" +
	"\x11target_identifier\x18\x01 \x01(\tR\x10targetIdentifier\x12G\n" +
	"\vtarget_type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\n" +
	"targetType\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\x12\x1f\n" +
	"\vcustomer_id\x18\x04 \x01(\tR\n" +
	"customerId\x12\x1b\n" +
	"\tobject_id\x18\x05 \x01(\tR\bobjectId\x12G\n" +
	"\vobject_type\x18\x06 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\n" +
	"objectType\"\xaa\x02\n" +
	"\x17RevokeConfigPermissions\x12+\n" +
	"\x11target_identifier\x18\x01 \x01(\tR\x10targetIdentifier\x12G\n" +
	"\vtarget_type\x18\x02 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\n" +
	"targetType\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\x12\x1f\n" +
	"\vcustomer_id\x18\x04 \x01(\tR\n" +
	"customerId\x12\x1b\n" +
	"\tobject_id\x18\x05 \x01(\tR\bobjectId\x12G\n" +
	"\vobject_type\x18\x06 \x01(\x0e2&.indykite.auditsink.v1beta1.ConfigTypeR\n" +
	"objectType\"\xb8\a\n" +
	"\x15TokenIntrospectConfig\x12I\n" +
	"\x03jwt\x18\x01 \x01(\v25.indykite.auditsink.v1beta1.TokenIntrospectConfig.JWTH\x00R\x03jwt\x12R\n" +
	"\x06opaque\x18\x02 \x01(\v28.indykite.auditsink.v1beta1.TokenIntrospectConfig.OpaqueH\x00R\x06opaque\x12U\n" +
	"\aoffline\x18\x03 \x01(\v29.indykite.auditsink.v1beta1.TokenIntrospectConfig.OfflineH\x01R\aoffline\x12R\n" +
	"\x06online\x18\x04 \x01(\v28.indykite.auditsink.v1beta1.TokenIntrospectConfig.OnlineH\x01R\x06online\x12k\n" +
	"\x0eclaims_mapping\x18\a \x03(\v2D.indykite.auditsink.v1beta1.TokenIntrospectConfig.ClaimsMappingEntryR\rclaimsMapping\x12\"\n" +
	"\rikg_node_type\x18\x05 \x01(\tR\vikgNodeType\x12%\n" +
	"\x0eperform_upsert\x18\x06 \x01(\bR\rperformUpsert\x1a9\n" +
	"\x03JWT\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x1a\n" +
	"\baudience\x18\x02 \x01(\tR\baudience\x1a\b\n" +
	"\x06Opaque\x1a*\n" +
	"\aOffline\x12\x1f\n" +
	"\vpublic_jwks\x18\x01 \x03(\fR\n" +
	"publicJwks\x1am\n" +
	"\x06Online\x12+\n" +
	"\x11userinfo_endpoint\x18\x01 \x01(\tR\x10userinfoEndpoint\x126\n" +
	"\tcache_ttl\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bcacheTtl\x1a#\n" +
	"\x05Claim\x12\x1a\n" +
	"\bselector\x18\x01 \x01(\tR\bselector\x1ay\n" +
	"\x12ClaimsMappingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12M\n" +
	"\x05value\x18\x02 \x01(\v27.indykite.auditsink.v1beta1.TokenIntrospectConfig.ClaimR\x05value:\x028\x01B\x0f\n" +
	"\rtoken_matcherB\f\n" +
	"\n" +
	"validation\"\x9f\x02\n" +
	"\x14ConsentConfiguration\x12\x18\n" +
	"\apurpose\x18\x01 \x01(\tR\apurpose\x12\x1f\n" +
	"\vdata_points\x18\x02 \x03(\tR\n" +
	"dataPoints\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\x12'\n" +
	"\x0fvalidity_period\x18\x04 \x01(\x04R\x0evalidityPeriod\x12(\n" +
	"\x10revoke_after_use\x18\x05 \x01(\bR\x0erevokeAfterUse\x12R\n" +
	"\ftoken_status\x18\a \x01(\x0e2/.indykite.auditsink.v1beta1.ExternalTokenStatusR\vtokenStatus\"\xb1\x01\n" +
	"\x14IngestPipelineConfig\x12\x18\n" +
	"\asources\x18\x01 \x03(\tR\asources\x12W\n" +
	"\n" +
	"operations\x18\x02 \x03(\x0e23.indykite.auditsink.v1beta1.IngestPipelineOperationB\x02\x18\x01R\n" +
	"operations\x12&\n" +
	"\x0fapp_agent_token\x18\x03 \x01(\tR\rappAgentToken\"\x8e\v\n" +
	"\x1cEntityMatchingPipelineConfig\x12d\n" +
	"\vnode_filter\x18\x01 \x01(\v2C.indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.NodeFilterR\n" +
	"nodeFilter\x126\n" +
	"\x17similarity_score_cutoff\x18\x02 \x01(\x02R\x15similarityScoreCutoff\x12w\n" +
	"\x17property_mapping_status\x18\x03 \x01(\x0e2?.indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.StatusR\x15propertyMappingStatus\x12V\n" +
	"\x18property_mapping_message\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\x16propertyMappingMessage\x12u\n" +
	"\x16entity_matching_status\x18\x04 \x01(\x0e2?.indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.StatusR\x14entityMatchingStatus\x12T\n" +
	"\x17entity_matching_message\x18\t \x01(\v2\x1c.google.protobuf.StringValueR\x15entityMatchingMessage\x12u\n" +
	"\x11property_mappings\x18\x05 \x03(\v2H.indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.PropertyMappingR\x10propertyMappings\x12%\n" +
	"\x0ererun_interval\x18\x06 \x01(\tR\rrerunInterval\x12>\n" +
	"\rlast_run_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastRunTime\x12;\n" +
	"\n" +
	"report_url\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\treportUrl\x12=\n" +
	"\vreport_type\x18\v \x01(\v2\x1c.google.protobuf.StringValueR\n" +
	"reportType\x1ad\n" +
	"\n" +
	"NodeFilter\x12*\n" +
	"\x11source_node_types\x18\x01 \x03(\tR\x0fsourceNodeTypes\x12*\n" +
	"\x11target_node_types\x18\x02 \x03(\tR\x0ftargetNodeTypes\x1a\x81\x02\n" +
	"\x0fPropertyMapping\x12(\n" +
	"\x10source_node_type\x18\x01 \x01(\tR\x0esourceNodeType\x120\n" +
	"\x14source_node_property\x18\x02 \x01(\tR\x12sourceNodeProperty\x12(\n" +
	"\x10target_node_type\x18\x03 \x01(\tR\x0etargetNodeType\x120\n" +
	"\x14target_node_property\x18\x04 \x01(\tR\x12targetNodeProperty\x126\n" +
	"\x17similarity_score_cutoff\x18\x05 \x01(\x02R\x15similarityScoreCutoff\"n\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_INVALID\x10\x00\x12\x12\n" +
	"\x0eSTATUS_PENDING\x10\x01\x12\x16\n" +
	"\x12STATUS_IN_PROGRESS\x10\x02\x12\x12\n" +
	"\x0eSTATUS_SUCCESS\x10\x03\x12\x10\n" +
	"\fSTATUS_ERROR\x10\x04\"\xf7\x01\n" +
	"\x13TrustScoreDimension\x12H\n" +
	"\x04name\x18\x01 \x01(\x0e24.indykite.auditsink.v1beta1.TrustScoreDimension.NameR\x04name\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\x02R\x06weight\"~\n" +
	"\x04Name\x12\x10\n" +
	"\fNAME_INVALID\x10\x00\x12\x12\n" +
	"\x0eNAME_FRESHNESS\x10\x01\x12\x15\n" +
	"\x11NAME_COMPLETENESS\x10\x02\x12\x11\n" +
	"\rNAME_VALIDITY\x10\x03\x12\x0f\n" +
	"\vNAME_ORIGIN\x10\x04\x12\x15\n" +
	"\x11NAME_VERIFICATION\x10\x05\"\xaf\x03\n" +
	"\x17TrustScoreProfileConfig\x12/\n" +
	"\x13node_classification\x18\x01 \x01(\tR\x12nodeClassification\x12O\n" +
	"\n" +
	"dimensions\x18\x02 \x03(\v2/.indykite.auditsink.v1beta1.TrustScoreDimensionR\n" +
	"dimensions\x12_\n" +
	"\bschedule\x18\x03 \x01(\x0e2C.indykite.auditsink.v1beta1.TrustScoreProfileConfig.UpdateFrequencyR\bschedule\"\xb0\x01\n" +
	"\x0fUpdateFrequency\x12\x1c\n" +
	"\x18UPDATE_FREQUENCY_INVALID\x10\x00\x12 \n" +
	"\x1cUPDATE_FREQUENCY_THREE_HOURS\x10\x01\x12\x1e\n" +
	"\x1aUPDATE_FREQUENCY_SIX_HOURS\x10\x02\x12!\n" +
	"\x1dUPDATE_FREQUENCY_TWELVE_HOURS\x10\x03\x12\x1a\n" +
	"\x16UPDATE_FREQUENCY_DAILY\x10\x04\"\xf2\x01\n" +
	"\x14KnowledgeQueryConfig\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12O\n" +
	"\x06status\x18\x02 \x01(\x0e27.indykite.auditsink.v1beta1.KnowledgeQueryConfig.StatusR\x06status\x12\x1b\n" +
	"\tpolicy_id\x18\x03 \x01(\tR\bpolicyId\"V\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_INVALID\x10\x00\x12\x11\n" +
	"\rSTATUS_ACTIVE\x10\x01\x12\x13\n" +
	"\x0fSTATUS_INACTIVE\x10\x02\x12\x10\n" +
	"\fSTATUS_DRAFT\x10\x03\"?\n" +
	"\x15CapturePipelineConfig\x12&\n" +
	"\x0fapp_agent_token\x18\x01 \x01(\tR\rappAgentToken\"\xc7\x01\n" +
	"\x1aCapturePipelineTopicConfig\x12.\n" +
	"\x13capture_pipeline_id\x18\x01 \x01(\tR\x11capturePipelineId\x12U\n" +
	"\x06script\x18\x02 \x01(\v2=.indykite.auditsink.v1beta1.CapturePipelineTopicConfig.ScriptR\x06script\x1a\"\n" +
	"\x06Script\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent*\xf5\x05\n" +
	"\n" +
	"ConfigType\x12\x17\n" +
	"\x13CONFIG_TYPE_INVALID\x10\x00\x12\x18\n" +
	"\x14CONFIG_TYPE_CUSTOMER\x10\x01\x12!\n" +
	"\x1dCONFIG_TYPE_APPLICATION_SPACE\x10\x02\x12\x1b\n" +
	"\x17CONFIG_TYPE_APPLICATION\x10\x04\x12\x19\n" +
	"\x15CONFIG_TYPE_APP_AGENT\x10\x05\x12$\n" +
	" CONFIG_TYPE_APP_AGENT_CREDENTIAL\x10\x06\x12\x1f\n" +
	"\x1bCONFIG_TYPE_SERVICE_ACCOUNT\x10\x12\x12\"\n" +
	"\x1eCONFIG_TYPE_SERVICE_CREDENTIAL\x10\x13\x12\x1a\n" +
	"\x16CONFIG_TYPE_EVENT_SINK\x10\x1b\x12 \n" +
	"\x1cCONFIG_TYPE_TOKEN_INTROSPECT\x10\x1e\x12$\n" +
	" CONFIG_TYPE_AUTHORIZATION_POLICY\x10\x16\x12\x14\n" +
	"\x10CONFIG_TYPE_NODE\x10\x1c\x12\x17\n" +
	"\x13CONFIG_TYPE_CONSENT\x10\x1d\x12\x1f\n" +
	"\x1bCONFIG_TYPE_INGEST_PIPELINE\x10\x1f\x12(\n" +
	"$CONFIG_TYPE_ENTITY_MATCHING_PIPELINE\x10 \x12&\n" +
	"\"CONFIG_TYPE_EXTERNAL_DATA_RESOLVER\x10!\x12#\n" +
	"\x1fCONFIG_TYPE_TRUST_SCORE_PROFILE\x10\"\x12\x1f\n" +
	"\x1bCONFIG_TYPE_KNOWLEDGE_QUERY\x10#\x12 \n" +
	"\x1cCONFIG_TYPE_CAPTURE_PIPELINE\x10$\x12&\n" +
	"\"CONFIG_TYPE_CAPTURE_PIPELINE_TOPIC\x10%\"\x04\b\x0f\x10\x0f\"\x04\b\x15\x10\x15\"\x04\b\x03\x10\x03\"\x04\b\a\x10\a\"\x04\b\b\x10\b\"\x04\b\t\x10\t\"\x04\b\n" +
	"\x10\n" +
	"\"\x04\b\v\x10\v\"\x04\b\f\x10\f\"\x04\b\r\x10\r\"\x04\b\x0e\x10\x0e\"\x04\b\x10\x10\x10\"\x04\b\x11\x10\x11\"\x04\b\x18\x10\x18\"\x04\b\x17\x10\x17*\xa0\x01\n" +
	"\x13ExternalTokenStatus\x12!\n" +
	"\x1dEXTERNAL_TOKEN_STATUS_INVALID\x10\x00\x12!\n" +
	"\x1dEXTERNAL_TOKEN_STATUS_ENFORCE\x10\x01\x12\x1f\n" +
	"\x1bEXTERNAL_TOKEN_STATUS_ALLOW\x10\x02\x12\"\n" +
	"\x1eEXTERNAL_TOKEN_STATUS_DISALLOW\x10\x03*\xec\x02\n" +
	"\x17IngestPipelineOperation\x12%\n" +
	"!INGEST_PIPELINE_OPERATION_INVALID\x10\x00\x12)\n" +
	"%INGEST_PIPELINE_OPERATION_UPSERT_NODE\x10\x01\x121\n" +
	"-INGEST_PIPELINE_OPERATION_UPSERT_RELATIONSHIP\x10\x02\x12)\n" +
	"%INGEST_PIPELINE_OPERATION_DELETE_NODE\x10\x03\x121\n" +
	"-INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP\x10\x04\x122\n" +
	".INGEST_PIPELINE_OPERATION_DELETE_NODE_PROPERTY\x10\x05\x12:\n" +
	"6INGEST_PIPELINE_OPERATION_DELETE_RELATIONSHIP_PROPERTY\x10\x06B\x8c\x02\n" +
	"\x1ecom.indykite.auditsink.v1beta1B\vConfigProtoP\x01ZSgithub.com/indykite/indykite-sdk-go/gen/indykite/auditsink/v1beta1;auditsinkv1beta1\xa2\x02\x03IAX\xaa\x02\x1aIndykite.Auditsink.V1beta1\xca\x02\x1aIndykite\\Auditsink\\V1beta1\xe2\x02&Indykite\\Auditsink\\V1beta1\\GPBMetadata\xea\x02\x1cIndykite::Auditsink::V1beta1b\x06proto3"

var (
	file_indykite_auditsink_v1beta1_config_proto_rawDescOnce sync.Once
	file_indykite_auditsink_v1beta1_config_proto_rawDescData []byte
)

func file_indykite_auditsink_v1beta1_config_proto_rawDescGZIP() []byte {
	file_indykite_auditsink_v1beta1_config_proto_rawDescOnce.Do(func() {
		file_indykite_auditsink_v1beta1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indykite_auditsink_v1beta1_config_proto_rawDesc), len(file_indykite_auditsink_v1beta1_config_proto_rawDesc)))
	})
	return file_indykite_auditsink_v1beta1_config_proto_rawDescData
}

var file_indykite_auditsink_v1beta1_config_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_indykite_auditsink_v1beta1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_indykite_auditsink_v1beta1_config_proto_goTypes = []any{
	(ConfigType)(0),                                      // 0: indykite.auditsink.v1beta1.ConfigType
	(ExternalTokenStatus)(0),                             // 1: indykite.auditsink.v1beta1.ExternalTokenStatus
	(IngestPipelineOperation)(0),                         // 2: indykite.auditsink.v1beta1.IngestPipelineOperation
	(ExternalDataResolverConfig_ContentType)(0),          // 3: indykite.auditsink.v1beta1.ExternalDataResolverConfig.ContentType
	(AuthorizationPolicyConfig_Status)(0),                // 4: indykite.auditsink.v1beta1.AuthorizationPolicyConfig.Status
	(EntityMatchingPipelineConfig_Status)(0),             // 5: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.Status
	(TrustScoreDimension_Name)(0),                        // 6: indykite.auditsink.v1beta1.TrustScoreDimension.Name
	(TrustScoreProfileConfig_UpdateFrequency)(0),         // 7: indykite.auditsink.v1beta1.TrustScoreProfileConfig.UpdateFrequency
	(KnowledgeQueryConfig_Status)(0),                     // 8: indykite.auditsink.v1beta1.KnowledgeQueryConfig.Status
	(*ContainersPath)(nil),                               // 9: indykite.auditsink.v1beta1.ContainersPath
	(*CreatedConfig)(nil),                                // 10: indykite.auditsink.v1beta1.CreatedConfig
	(*ReadConfig)(nil),                                   // 11: indykite.auditsink.v1beta1.ReadConfig
	(*UpdatedConfig)(nil),                                // 12: indykite.auditsink.v1beta1.UpdatedConfig
	(*DeletedConfig)(nil),                                // 13: indykite.auditsink.v1beta1.DeletedConfig
	(*ConfigDetail)(nil),                                 // 14: indykite.auditsink.v1beta1.ConfigDetail
	(*DBConnection)(nil),                                 // 15: indykite.auditsink.v1beta1.DBConnection
	(*ApplicationSpaceConfig)(nil),                       // 16: indykite.auditsink.v1beta1.ApplicationSpaceConfig
	(*ApplicationAgentCredentialConfig)(nil),             // 17: indykite.auditsink.v1beta1.ApplicationAgentCredentialConfig
	(*ApplicationAgentConfig)(nil),                       // 18: indykite.auditsink.v1beta1.ApplicationAgentConfig
	(*ServiceAccountCredentialConfig)(nil),               // 19: indykite.auditsink.v1beta1.ServiceAccountCredentialConfig
	(*EventSinkConfig)(nil),                              // 20: indykite.auditsink.v1beta1.EventSinkConfig
	(*ExternalDataResolverConfig)(nil),                   // 21: indykite.auditsink.v1beta1.ExternalDataResolverConfig
	(*AuthorizationPolicyConfig)(nil),                    // 22: indykite.auditsink.v1beta1.AuthorizationPolicyConfig
	(*AssignConfigPermissions)(nil),                      // 23: indykite.auditsink.v1beta1.AssignConfigPermissions
	(*RevokeConfigPermissions)(nil),                      // 24: indykite.auditsink.v1beta1.RevokeConfigPermissions
	(*TokenIntrospectConfig)(nil),                        // 25: indykite.auditsink.v1beta1.TokenIntrospectConfig
	(*ConsentConfiguration)(nil),                         // 26: indykite.auditsink.v1beta1.ConsentConfiguration
	(*IngestPipelineConfig)(nil),                         // 27: indykite.auditsink.v1beta1.IngestPipelineConfig
	(*EntityMatchingPipelineConfig)(nil),                 // 28: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig
	(*TrustScoreDimension)(nil),                          // 29: indykite.auditsink.v1beta1.TrustScoreDimension
	(*TrustScoreProfileConfig)(nil),                      // 30: indykite.auditsink.v1beta1.TrustScoreProfileConfig
	(*KnowledgeQueryConfig)(nil),                         // 31: indykite.auditsink.v1beta1.KnowledgeQueryConfig
	(*CapturePipelineConfig)(nil),                        // 32: indykite.auditsink.v1beta1.CapturePipelineConfig
	(*CapturePipelineTopicConfig)(nil),                   // 33: indykite.auditsink.v1beta1.CapturePipelineTopicConfig
	(*CreatedConfig_Location)(nil),                       // 34: indykite.auditsink.v1beta1.CreatedConfig.Location
	(*ReadConfig_NameIdentifier)(nil),                    // 35: indykite.auditsink.v1beta1.ReadConfig.NameIdentifier
	(*EventSinkConfig_KafkaSinkConfig)(nil),              // 36: indykite.auditsink.v1beta1.EventSinkConfig.KafkaSinkConfig
	(*EventSinkConfig_AzureServiceBusSinkConfig)(nil),    // 37: indykite.auditsink.v1beta1.EventSinkConfig.AzureServiceBusSinkConfig
	(*EventSinkConfig_AzureEventGridSinkConfig)(nil),     // 38: indykite.auditsink.v1beta1.EventSinkConfig.AzureEventGridSinkConfig
	(*EventSinkConfig_Provider)(nil),                     // 39: indykite.auditsink.v1beta1.EventSinkConfig.Provider
	(*EventSinkConfig_Route)(nil),                        // 40: indykite.auditsink.v1beta1.EventSinkConfig.Route
	nil,                                                  // 41: indykite.auditsink.v1beta1.EventSinkConfig.ProvidersEntry
	(*EventSinkConfig_Route_KeyValue)(nil),               // 42: indykite.auditsink.v1beta1.EventSinkConfig.Route.KeyValue
	nil,                                                  // 43: indykite.auditsink.v1beta1.ExternalDataResolverConfig.HeadersEntry
	(*TokenIntrospectConfig_JWT)(nil),                    // 44: indykite.auditsink.v1beta1.TokenIntrospectConfig.JWT
	(*TokenIntrospectConfig_Opaque)(nil),                 // 45: indykite.auditsink.v1beta1.TokenIntrospectConfig.Opaque
	(*TokenIntrospectConfig_Offline)(nil),                // 46: indykite.auditsink.v1beta1.TokenIntrospectConfig.Offline
	(*TokenIntrospectConfig_Online)(nil),                 // 47: indykite.auditsink.v1beta1.TokenIntrospectConfig.Online
	(*TokenIntrospectConfig_Claim)(nil),                  // 48: indykite.auditsink.v1beta1.TokenIntrospectConfig.Claim
	nil,                                                  // 49: indykite.auditsink.v1beta1.TokenIntrospectConfig.ClaimsMappingEntry
	(*EntityMatchingPipelineConfig_NodeFilter)(nil),      // 50: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.NodeFilter
	(*EntityMatchingPipelineConfig_PropertyMapping)(nil), // 51: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.PropertyMapping
	(*CapturePipelineTopicConfig_Script)(nil),            // 52: indykite.auditsink.v1beta1.CapturePipelineTopicConfig.Script
	(*timestamppb.Timestamp)(nil),                        // 53: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),                       // 54: google.protobuf.StringValue
	(*durationpb.Duration)(nil),                          // 55: google.protobuf.Duration
}
var file_indykite_auditsink_v1beta1_config_proto_depIdxs = []int32{
	0,  // 0: indykite.auditsink.v1beta1.CreatedConfig.type:type_name -> indykite.auditsink.v1beta1.ConfigType
	34, // 1: indykite.auditsink.v1beta1.CreatedConfig.location:type_name -> indykite.auditsink.v1beta1.CreatedConfig.Location
	9,  // 2: indykite.auditsink.v1beta1.CreatedConfig.containers_path:type_name -> indykite.auditsink.v1beta1.ContainersPath
	14, // 3: indykite.auditsink.v1beta1.CreatedConfig.detail:type_name -> indykite.auditsink.v1beta1.ConfigDetail
	35, // 4: indykite.auditsink.v1beta1.ReadConfig.name:type_name -> indykite.auditsink.v1beta1.ReadConfig.NameIdentifier
	9,  // 5: indykite.auditsink.v1beta1.ReadConfig.containers_path:type_name -> indykite.auditsink.v1beta1.ContainersPath
	0,  // 6: indykite.auditsink.v1beta1.ReadConfig.type:type_name -> indykite.auditsink.v1beta1.ConfigType
	0,  // 7: indykite.auditsink.v1beta1.UpdatedConfig.type:type_name -> indykite.auditsink.v1beta1.ConfigType
	9,  // 8: indykite.auditsink.v1beta1.UpdatedConfig.containers_path:type_name -> indykite.auditsink.v1beta1.ContainersPath
	14, // 9: indykite.auditsink.v1beta1.UpdatedConfig.before:type_name -> indykite.auditsink.v1beta1.ConfigDetail
	14, // 10: indykite.auditsink.v1beta1.UpdatedConfig.after:type_name -> indykite.auditsink.v1beta1.ConfigDetail
	0,  // 11: indykite.auditsink.v1beta1.DeletedConfig.type:type_name -> indykite.auditsink.v1beta1.ConfigType
	9,  // 12: indykite.auditsink.v1beta1.DeletedConfig.containers_path:type_name -> indykite.auditsink.v1beta1.ContainersPath
	16, // 13: indykite.auditsink.v1beta1.ConfigDetail.application_space:type_name -> indykite.auditsink.v1beta1.ApplicationSpaceConfig
	18, // 14: indykite.auditsink.v1beta1.ConfigDetail.application_agent:type_name -> indykite.auditsink.v1beta1.ApplicationAgentConfig
	17, // 15: indykite.auditsink.v1beta1.ConfigDetail.application_agent_credential:type_name -> indykite.auditsink.v1beta1.ApplicationAgentCredentialConfig
	19, // 16: indykite.auditsink.v1beta1.ConfigDetail.service_account_credential:type_name -> indykite.auditsink.v1beta1.ServiceAccountCredentialConfig
	20, // 17: indykite.auditsink.v1beta1.ConfigDetail.event_sink_config:type_name -> indykite.auditsink.v1beta1.EventSinkConfig
	22, // 18: indykite.auditsink.v1beta1.ConfigDetail.authorization_policy_config:type_name -> indykite.auditsink.v1beta1.AuthorizationPolicyConfig
	25, // 19: indykite.auditsink.v1beta1.ConfigDetail.token_introspect_config:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig
	21, // 20: indykite.auditsink.v1beta1.ConfigDetail.external_data_resolver_config:type_name -> indykite.auditsink.v1beta1.ExternalDataResolverConfig
	30, // 21: indykite.auditsink.v1beta1.ConfigDetail.trust_score_profile_config:type_name -> indykite.auditsink.v1beta1.TrustScoreProfileConfig
	26, // 22: indykite.auditsink.v1beta1.ConfigDetail.consent_config:type_name -> indykite.auditsink.v1beta1.ConsentConfiguration
	27, // 23: indykite.auditsink.v1beta1.ConfigDetail.ingest_pipeline_config:type_name -> indykite.auditsink.v1beta1.IngestPipelineConfig
	28, // 24: indykite.auditsink.v1beta1.ConfigDetail.entity_matching_pipeline_config:type_name -> indykite.auditsink.v1beta1.EntityMatchingPipelineConfig
	31, // 25: indykite.auditsink.v1beta1.ConfigDetail.knowledge_query_config:type_name -> indykite.auditsink.v1beta1.KnowledgeQueryConfig
	32, // 26: indykite.auditsink.v1beta1.ConfigDetail.capture_pipeline_config:type_name -> indykite.auditsink.v1beta1.CapturePipelineConfig
	33, // 27: indykite.auditsink.v1beta1.ConfigDetail.capture_pipeline_topic_config:type_name -> indykite.auditsink.v1beta1.CapturePipelineTopicConfig
	15, // 28: indykite.auditsink.v1beta1.ApplicationSpaceConfig.db_connection:type_name -> indykite.auditsink.v1beta1.DBConnection
	53, // 29: indykite.auditsink.v1beta1.ApplicationAgentCredentialConfig.expire_time:type_name -> google.protobuf.Timestamp
	53, // 30: indykite.auditsink.v1beta1.ServiceAccountCredentialConfig.expire_time:type_name -> google.protobuf.Timestamp
	41, // 31: indykite.auditsink.v1beta1.EventSinkConfig.providers:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.ProvidersEntry
	40, // 32: indykite.auditsink.v1beta1.EventSinkConfig.routes:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.Route
	43, // 33: indykite.auditsink.v1beta1.ExternalDataResolverConfig.headers:type_name -> indykite.auditsink.v1beta1.ExternalDataResolverConfig.HeadersEntry
	3,  // 34: indykite.auditsink.v1beta1.ExternalDataResolverConfig.request_type:type_name -> indykite.auditsink.v1beta1.ExternalDataResolverConfig.ContentType
	3,  // 35: indykite.auditsink.v1beta1.ExternalDataResolverConfig.response_type:type_name -> indykite.auditsink.v1beta1.ExternalDataResolverConfig.ContentType
	4,  // 36: indykite.auditsink.v1beta1.AuthorizationPolicyConfig.status:type_name -> indykite.auditsink.v1beta1.AuthorizationPolicyConfig.Status
	0,  // 37: indykite.auditsink.v1beta1.AssignConfigPermissions.target_type:type_name -> indykite.auditsink.v1beta1.ConfigType
	0,  // 38: indykite.auditsink.v1beta1.AssignConfigPermissions.object_type:type_name -> indykite.auditsink.v1beta1.ConfigType
	0,  // 39: indykite.auditsink.v1beta1.RevokeConfigPermissions.target_type:type_name -> indykite.auditsink.v1beta1.ConfigType
	0,  // 40: indykite.auditsink.v1beta1.RevokeConfigPermissions.object_type:type_name -> indykite.auditsink.v1beta1.ConfigType
	44, // 41: indykite.auditsink.v1beta1.TokenIntrospectConfig.jwt:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.JWT
	45, // 42: indykite.auditsink.v1beta1.TokenIntrospectConfig.opaque:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.Opaque
	46, // 43: indykite.auditsink.v1beta1.TokenIntrospectConfig.offline:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.Offline
	47, // 44: indykite.auditsink.v1beta1.TokenIntrospectConfig.online:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.Online
	49, // 45: indykite.auditsink.v1beta1.TokenIntrospectConfig.claims_mapping:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.ClaimsMappingEntry
	1,  // 46: indykite.auditsink.v1beta1.ConsentConfiguration.token_status:type_name -> indykite.auditsink.v1beta1.ExternalTokenStatus
	2,  // 47: indykite.auditsink.v1beta1.IngestPipelineConfig.operations:type_name -> indykite.auditsink.v1beta1.IngestPipelineOperation
	50, // 48: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.node_filter:type_name -> indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.NodeFilter
	5,  // 49: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.property_mapping_status:type_name -> indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.Status
	54, // 50: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.property_mapping_message:type_name -> google.protobuf.StringValue
	5,  // 51: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.entity_matching_status:type_name -> indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.Status
	54, // 52: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.entity_matching_message:type_name -> google.protobuf.StringValue
	51, // 53: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.property_mappings:type_name -> indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.PropertyMapping
	53, // 54: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.last_run_time:type_name -> google.protobuf.Timestamp
	54, // 55: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.report_url:type_name -> google.protobuf.StringValue
	54, // 56: indykite.auditsink.v1beta1.EntityMatchingPipelineConfig.report_type:type_name -> google.protobuf.StringValue
	6,  // 57: indykite.auditsink.v1beta1.TrustScoreDimension.name:type_name -> indykite.auditsink.v1beta1.TrustScoreDimension.Name
	29, // 58: indykite.auditsink.v1beta1.TrustScoreProfileConfig.dimensions:type_name -> indykite.auditsink.v1beta1.TrustScoreDimension
	7,  // 59: indykite.auditsink.v1beta1.TrustScoreProfileConfig.schedule:type_name -> indykite.auditsink.v1beta1.TrustScoreProfileConfig.UpdateFrequency
	8,  // 60: indykite.auditsink.v1beta1.KnowledgeQueryConfig.status:type_name -> indykite.auditsink.v1beta1.KnowledgeQueryConfig.Status
	52, // 61: indykite.auditsink.v1beta1.CapturePipelineTopicConfig.script:type_name -> indykite.auditsink.v1beta1.CapturePipelineTopicConfig.Script
	0,  // 62: indykite.auditsink.v1beta1.CreatedConfig.Location.type:type_name -> indykite.auditsink.v1beta1.ConfigType
	0,  // 63: indykite.auditsink.v1beta1.ReadConfig.NameIdentifier.location_type:type_name -> indykite.auditsink.v1beta1.ConfigType
	36, // 64: indykite.auditsink.v1beta1.EventSinkConfig.Provider.kafka:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.KafkaSinkConfig
	37, // 65: indykite.auditsink.v1beta1.EventSinkConfig.Provider.azure_service_bus:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.AzureServiceBusSinkConfig
	38, // 66: indykite.auditsink.v1beta1.EventSinkConfig.Provider.azure_event_grid:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.AzureEventGridSinkConfig
	42, // 67: indykite.auditsink.v1beta1.EventSinkConfig.Route.context_key_value:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.Route.KeyValue
	39, // 68: indykite.auditsink.v1beta1.EventSinkConfig.ProvidersEntry.value:type_name -> indykite.auditsink.v1beta1.EventSinkConfig.Provider
	55, // 69: indykite.auditsink.v1beta1.TokenIntrospectConfig.Online.cache_ttl:type_name -> google.protobuf.Duration
	48, // 70: indykite.auditsink.v1beta1.TokenIntrospectConfig.ClaimsMappingEntry.value:type_name -> indykite.auditsink.v1beta1.TokenIntrospectConfig.Claim
	71, // [71:71] is the sub-list for method output_type
	71, // [71:71] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_indykite_auditsink_v1beta1_config_proto_init() }
func file_indykite_auditsink_v1beta1_config_proto_init() {
	if File_indykite_auditsink_v1beta1_config_proto != nil {
		return
	}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[2].OneofWrappers = []any{
		(*ReadConfig_Id)(nil),
		(*ReadConfig_Name)(nil),
	}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[5].OneofWrappers = []any{
		(*ConfigDetail_ApplicationSpace)(nil),
		(*ConfigDetail_ApplicationAgent)(nil),
		(*ConfigDetail_ApplicationAgentCredential)(nil),
		(*ConfigDetail_ServiceAccountCredential)(nil),
		(*ConfigDetail_EventSinkConfig)(nil),
		(*ConfigDetail_AuthorizationPolicyConfig)(nil),
		(*ConfigDetail_TokenIntrospectConfig)(nil),
		(*ConfigDetail_ExternalDataResolverConfig)(nil),
		(*ConfigDetail_TrustScoreProfileConfig)(nil),
		(*ConfigDetail_ConsentConfig)(nil),
		(*ConfigDetail_IngestPipelineConfig)(nil),
		(*ConfigDetail_EntityMatchingPipelineConfig)(nil),
		(*ConfigDetail_KnowledgeQueryConfig)(nil),
		(*ConfigDetail_CapturePipelineConfig)(nil),
		(*ConfigDetail_CapturePipelineTopicConfig)(nil),
	}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[16].OneofWrappers = []any{
		(*TokenIntrospectConfig_Jwt)(nil),
		(*TokenIntrospectConfig_Opaque_)(nil),
		(*TokenIntrospectConfig_Offline_)(nil),
		(*TokenIntrospectConfig_Online_)(nil),
	}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[26].OneofWrappers = []any{}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[30].OneofWrappers = []any{
		(*EventSinkConfig_Provider_Kafka)(nil),
		(*EventSinkConfig_Provider_AzureServiceBus)(nil),
		(*EventSinkConfig_Provider_AzureEventGrid)(nil),
	}
	file_indykite_auditsink_v1beta1_config_proto_msgTypes[31].OneofWrappers = []any{
		(*EventSinkConfig_Route_EventType)(nil),
		(*EventSinkConfig_Route_ContextKeyValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indykite_auditsink_v1beta1_config_proto_rawDesc), len(file_indykite_auditsink_v1beta1_config_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indykite_auditsink_v1beta1_config_proto_goTypes,
		DependencyIndexes: file_indykite_auditsink_v1beta1_config_proto_depIdxs,
		EnumInfos:         file_indykite_auditsink_v1beta1_config_proto_enumTypes,
		MessageInfos:      file_indykite_auditsink_v1beta1_config_proto_msgTypes,
	}.Build()
	File_indykite_auditsink_v1beta1_config_proto = out.File
	file_indykite_auditsink_v1beta1_config_proto_goTypes = nil
	file_indykite_auditsink_v1beta1_config_proto_depIdxs = nil
}
