// Copyright (c) 2022 IndyKite
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Ingest Service Description.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: indykite/ingest/v1beta1/ingest_api.proto

package ingestv1beta1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MappingConfigId string  `protobuf:"bytes,1,opt,name=mapping_config_id,json=mappingConfigId,proto3" json:"mapping_config_id,omitempty"`
	Record          *Record `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *StreamRecordsRequest) Reset() {
	*x = StreamRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRecordsRequest) ProtoMessage() {}

func (x *StreamRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRecordsRequest.ProtoReflect.Descriptor instead.
func (*StreamRecordsRequest) Descriptor() ([]byte, []int) {
	return file_indykite_ingest_v1beta1_ingest_api_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRecordsRequest) GetMappingConfigId() string {
	if x != nil {
		return x.MappingConfigId
	}
	return ""
}

func (x *StreamRecordsRequest) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type StreamRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId    string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	RecordIndex uint32 `protobuf:"varint,2,opt,name=record_index,json=recordIndex,proto3" json:"record_index,omitempty"`
	// Types that are assignable to Error:
	//	*StreamRecordsResponse_RecordError
	//	*StreamRecordsResponse_StatusError
	Error isStreamRecordsResponse_Error `protobuf_oneof:"error"`
}

func (x *StreamRecordsResponse) Reset() {
	*x = StreamRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRecordsResponse) ProtoMessage() {}

func (x *StreamRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRecordsResponse.ProtoReflect.Descriptor instead.
func (*StreamRecordsResponse) Descriptor() ([]byte, []int) {
	return file_indykite_ingest_v1beta1_ingest_api_proto_rawDescGZIP(), []int{1}
}

func (x *StreamRecordsResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *StreamRecordsResponse) GetRecordIndex() uint32 {
	if x != nil {
		return x.RecordIndex
	}
	return 0
}

func (m *StreamRecordsResponse) GetError() isStreamRecordsResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *StreamRecordsResponse) GetRecordError() *RecordError {
	if x, ok := x.GetError().(*StreamRecordsResponse_RecordError); ok {
		return x.RecordError
	}
	return nil
}

func (x *StreamRecordsResponse) GetStatusError() *status.Status {
	if x, ok := x.GetError().(*StreamRecordsResponse_StatusError); ok {
		return x.StatusError
	}
	return nil
}

type isStreamRecordsResponse_Error interface {
	isStreamRecordsResponse_Error()
}

type StreamRecordsResponse_RecordError struct {
	RecordError *RecordError `protobuf:"bytes,3,opt,name=record_error,json=recordError,proto3,oneof"`
}

type StreamRecordsResponse_StatusError struct {
	StatusError *status.Status `protobuf:"bytes,4,opt,name=status_error,json=statusError,proto3,oneof"`
}

func (*StreamRecordsResponse_RecordError) isStreamRecordsResponse_Error() {}

func (*StreamRecordsResponse_StatusError) isStreamRecordsResponse_Error() {}

var File_indykite_ingest_v1beta1_ingest_api_proto protoreflect.FileDescriptor

var file_indykite_ingest_v1beta1_ingest_api_proto_rawDesc = []byte{
	0x0a, 0x28, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x6e, 0x64, 0x79,
	0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x1a, 0x23, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x69, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24,
	0xfa, 0x42, 0x21, 0x72, 0x1f, 0x10, 0x16, 0x18, 0xfe, 0x01, 0x32, 0x18, 0x5e, 0x5b, 0x41, 0x2d,
	0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x2d, 0x5f, 0x3a, 0x5d, 0x7b, 0x32, 0x32, 0x2c, 0x32,
	0x35, 0x34, 0x7d, 0x24, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65,
	0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x49, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b,
	0x69, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32,
	0x7f, 0x0a, 0x09, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x41, 0x50, 0x49, 0x12, 0x72, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x2e,
	0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69,
	0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x42, 0xf8, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x42, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x2f, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2d, 0x73,
	0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6e, 0x64, 0x79, 0x6b, 0x69,
	0x74, 0x65, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x3b, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2,
	0x02, 0x03, 0x49, 0x49, 0x58, 0xaa, 0x02, 0x17, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65,
	0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca,
	0x02, 0x17, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x5c, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x23, 0x49, 0x6e, 0x64, 0x79,
	0x6b, 0x69, 0x74, 0x65, 0x5c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x5c, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x19, 0x49, 0x6e, 0x64, 0x79, 0x6b, 0x69, 0x74, 0x65, 0x3a, 0x3a, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_indykite_ingest_v1beta1_ingest_api_proto_rawDescOnce sync.Once
	file_indykite_ingest_v1beta1_ingest_api_proto_rawDescData = file_indykite_ingest_v1beta1_ingest_api_proto_rawDesc
)

func file_indykite_ingest_v1beta1_ingest_api_proto_rawDescGZIP() []byte {
	file_indykite_ingest_v1beta1_ingest_api_proto_rawDescOnce.Do(func() {
		file_indykite_ingest_v1beta1_ingest_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_indykite_ingest_v1beta1_ingest_api_proto_rawDescData)
	})
	return file_indykite_ingest_v1beta1_ingest_api_proto_rawDescData
}

var file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_indykite_ingest_v1beta1_ingest_api_proto_goTypes = []interface{}{
	(*StreamRecordsRequest)(nil),  // 0: indykite.ingest.v1beta1.StreamRecordsRequest
	(*StreamRecordsResponse)(nil), // 1: indykite.ingest.v1beta1.StreamRecordsResponse
	(*Record)(nil),                // 2: indykite.ingest.v1beta1.Record
	(*RecordError)(nil),           // 3: indykite.ingest.v1beta1.RecordError
	(*status.Status)(nil),         // 4: google.rpc.Status
}
var file_indykite_ingest_v1beta1_ingest_api_proto_depIdxs = []int32{
	2, // 0: indykite.ingest.v1beta1.StreamRecordsRequest.record:type_name -> indykite.ingest.v1beta1.Record
	3, // 1: indykite.ingest.v1beta1.StreamRecordsResponse.record_error:type_name -> indykite.ingest.v1beta1.RecordError
	4, // 2: indykite.ingest.v1beta1.StreamRecordsResponse.status_error:type_name -> google.rpc.Status
	0, // 3: indykite.ingest.v1beta1.IngestAPI.StreamRecords:input_type -> indykite.ingest.v1beta1.StreamRecordsRequest
	1, // 4: indykite.ingest.v1beta1.IngestAPI.StreamRecords:output_type -> indykite.ingest.v1beta1.StreamRecordsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_indykite_ingest_v1beta1_ingest_api_proto_init() }
func file_indykite_ingest_v1beta1_ingest_api_proto_init() {
	if File_indykite_ingest_v1beta1_ingest_api_proto != nil {
		return
	}
	file_indykite_ingest_v1beta1_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StreamRecordsResponse_RecordError)(nil),
		(*StreamRecordsResponse_StatusError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_indykite_ingest_v1beta1_ingest_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_indykite_ingest_v1beta1_ingest_api_proto_goTypes,
		DependencyIndexes: file_indykite_ingest_v1beta1_ingest_api_proto_depIdxs,
		MessageInfos:      file_indykite_ingest_v1beta1_ingest_api_proto_msgTypes,
	}.Build()
	File_indykite_ingest_v1beta1_ingest_api_proto = out.File
	file_indykite_ingest_v1beta1_ingest_api_proto_rawDesc = nil
	file_indykite_ingest_v1beta1_ingest_api_proto_goTypes = nil
	file_indykite_ingest_v1beta1_ingest_api_proto_depIdxs = nil
}
